/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.607
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the DistinctAgg type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DistinctAgg{}

// DistinctAgg struct for DistinctAgg
type DistinctAgg struct {
	Field        string           `json:"field"`
	Order        OrderType        `json:"order"`
	Limit        *float64         `json:"limit,omitempty"`
	OrderField   string           `json:"order_field"`
	Distribution DistributionType `json:"distribution"`
}

// NewDistinctAgg instantiates a new DistinctAgg object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDistinctAgg(field string, order OrderType, orderField string, distribution DistributionType) *DistinctAgg {
	this := DistinctAgg{}
	this.Field = field
	this.Order = order
	this.OrderField = orderField
	this.Distribution = distribution
	return &this
}

// NewDistinctAggWithDefaults instantiates a new DistinctAgg object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDistinctAggWithDefaults() *DistinctAgg {
	this := DistinctAgg{}
	return &this
}

// GetField returns the Field field value
func (o *DistinctAgg) GetField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *DistinctAgg) GetFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *DistinctAgg) SetField(v string) {
	o.Field = v
}

// GetOrder returns the Order field value
func (o *DistinctAgg) GetOrder() OrderType {
	if o == nil {
		var ret OrderType
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *DistinctAgg) GetOrderOk() (*OrderType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *DistinctAgg) SetOrder(v OrderType) {
	o.Order = v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *DistinctAgg) GetLimit() float64 {
	if o == nil || IsNil(o.Limit) {
		var ret float64
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistinctAgg) GetLimitOk() (*float64, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *DistinctAgg) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given float64 and assigns it to the Limit field.
func (o *DistinctAgg) SetLimit(v float64) {
	o.Limit = &v
}

// GetOrderField returns the OrderField field value
func (o *DistinctAgg) GetOrderField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderField
}

// GetOrderFieldOk returns a tuple with the OrderField field value
// and a boolean to check if the value has been set.
func (o *DistinctAgg) GetOrderFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderField, true
}

// SetOrderField sets field value
func (o *DistinctAgg) SetOrderField(v string) {
	o.OrderField = v
}

// GetDistribution returns the Distribution field value
func (o *DistinctAgg) GetDistribution() DistributionType {
	if o == nil {
		var ret DistributionType
		return ret
	}

	return o.Distribution
}

// GetDistributionOk returns a tuple with the Distribution field value
// and a boolean to check if the value has been set.
func (o *DistinctAgg) GetDistributionOk() (*DistributionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Distribution, true
}

// SetDistribution sets field value
func (o *DistinctAgg) SetDistribution(v DistributionType) {
	o.Distribution = v
}

func (o DistinctAgg) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DistinctAgg) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field"] = o.Field
	toSerialize["order"] = o.Order
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	toSerialize["order_field"] = o.OrderField
	toSerialize["distribution"] = o.Distribution
	return toSerialize, nil
}

type NullableDistinctAgg struct {
	value *DistinctAgg
	isSet bool
}

func (v NullableDistinctAgg) Get() *DistinctAgg {
	return v.value
}

func (v *NullableDistinctAgg) Set(val *DistinctAgg) {
	v.value = val
	v.isSet = true
}

func (v NullableDistinctAgg) IsSet() bool {
	return v.isSet
}

func (v *NullableDistinctAgg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDistinctAgg(val *DistinctAgg) *NullableDistinctAgg {
	return &NullableDistinctAgg{value: val, isSet: true}
}

func (v NullableDistinctAgg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDistinctAgg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
