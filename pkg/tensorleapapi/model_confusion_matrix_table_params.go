/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.557
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the ConfusionMatrixTableParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfusionMatrixTableParams{}

// ConfusionMatrixTableParams struct for ConfusionMatrixTableParams
type ConfusionMatrixTableParams struct {
	SessionRunIds     []string   `json:"sessionRunIds"`
	ProjectId         string     `json:"projectId"`
	CustomMetricName  string     `json:"customMetricName"`
	VerticalSplit     *SplitAgg  `json:"verticalSplit,omitempty"`
	HorizontalSplit   *SplitAgg  `json:"horizontalSplit,omitempty"`
	Filters           []ESFilter `json:"filters,omitempty"`
	SplitByLabelOrder *OrderType `json:"splitByLabelOrder,omitempty"`
	SplitByLabel      bool       `json:"splitByLabel"`
	FilterLabels      []string   `json:"filterLabels,omitempty"`
	Threshold         *float64   `json:"threshold,omitempty"`
}

// NewConfusionMatrixTableParams instantiates a new ConfusionMatrixTableParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfusionMatrixTableParams(sessionRunIds []string, projectId string, customMetricName string, splitByLabel bool) *ConfusionMatrixTableParams {
	this := ConfusionMatrixTableParams{}
	this.SessionRunIds = sessionRunIds
	this.ProjectId = projectId
	this.CustomMetricName = customMetricName
	this.SplitByLabel = splitByLabel
	return &this
}

// NewConfusionMatrixTableParamsWithDefaults instantiates a new ConfusionMatrixTableParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfusionMatrixTableParamsWithDefaults() *ConfusionMatrixTableParams {
	this := ConfusionMatrixTableParams{}
	return &this
}

// GetSessionRunIds returns the SessionRunIds field value
func (o *ConfusionMatrixTableParams) GetSessionRunIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SessionRunIds
}

// GetSessionRunIdsOk returns a tuple with the SessionRunIds field value
// and a boolean to check if the value has been set.
func (o *ConfusionMatrixTableParams) GetSessionRunIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SessionRunIds, true
}

// SetSessionRunIds sets field value
func (o *ConfusionMatrixTableParams) SetSessionRunIds(v []string) {
	o.SessionRunIds = v
}

// GetProjectId returns the ProjectId field value
func (o *ConfusionMatrixTableParams) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ConfusionMatrixTableParams) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *ConfusionMatrixTableParams) SetProjectId(v string) {
	o.ProjectId = v
}

// GetCustomMetricName returns the CustomMetricName field value
func (o *ConfusionMatrixTableParams) GetCustomMetricName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomMetricName
}

// GetCustomMetricNameOk returns a tuple with the CustomMetricName field value
// and a boolean to check if the value has been set.
func (o *ConfusionMatrixTableParams) GetCustomMetricNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomMetricName, true
}

// SetCustomMetricName sets field value
func (o *ConfusionMatrixTableParams) SetCustomMetricName(v string) {
	o.CustomMetricName = v
}

// GetVerticalSplit returns the VerticalSplit field value if set, zero value otherwise.
func (o *ConfusionMatrixTableParams) GetVerticalSplit() SplitAgg {
	if o == nil || IsNil(o.VerticalSplit) {
		var ret SplitAgg
		return ret
	}
	return *o.VerticalSplit
}

// GetVerticalSplitOk returns a tuple with the VerticalSplit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfusionMatrixTableParams) GetVerticalSplitOk() (*SplitAgg, bool) {
	if o == nil || IsNil(o.VerticalSplit) {
		return nil, false
	}
	return o.VerticalSplit, true
}

// HasVerticalSplit returns a boolean if a field has been set.
func (o *ConfusionMatrixTableParams) HasVerticalSplit() bool {
	if o != nil && !IsNil(o.VerticalSplit) {
		return true
	}

	return false
}

// SetVerticalSplit gets a reference to the given SplitAgg and assigns it to the VerticalSplit field.
func (o *ConfusionMatrixTableParams) SetVerticalSplit(v SplitAgg) {
	o.VerticalSplit = &v
}

// GetHorizontalSplit returns the HorizontalSplit field value if set, zero value otherwise.
func (o *ConfusionMatrixTableParams) GetHorizontalSplit() SplitAgg {
	if o == nil || IsNil(o.HorizontalSplit) {
		var ret SplitAgg
		return ret
	}
	return *o.HorizontalSplit
}

// GetHorizontalSplitOk returns a tuple with the HorizontalSplit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfusionMatrixTableParams) GetHorizontalSplitOk() (*SplitAgg, bool) {
	if o == nil || IsNil(o.HorizontalSplit) {
		return nil, false
	}
	return o.HorizontalSplit, true
}

// HasHorizontalSplit returns a boolean if a field has been set.
func (o *ConfusionMatrixTableParams) HasHorizontalSplit() bool {
	if o != nil && !IsNil(o.HorizontalSplit) {
		return true
	}

	return false
}

// SetHorizontalSplit gets a reference to the given SplitAgg and assigns it to the HorizontalSplit field.
func (o *ConfusionMatrixTableParams) SetHorizontalSplit(v SplitAgg) {
	o.HorizontalSplit = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ConfusionMatrixTableParams) GetFilters() []ESFilter {
	if o == nil || IsNil(o.Filters) {
		var ret []ESFilter
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfusionMatrixTableParams) GetFiltersOk() ([]ESFilter, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ConfusionMatrixTableParams) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []ESFilter and assigns it to the Filters field.
func (o *ConfusionMatrixTableParams) SetFilters(v []ESFilter) {
	o.Filters = v
}

// GetSplitByLabelOrder returns the SplitByLabelOrder field value if set, zero value otherwise.
func (o *ConfusionMatrixTableParams) GetSplitByLabelOrder() OrderType {
	if o == nil || IsNil(o.SplitByLabelOrder) {
		var ret OrderType
		return ret
	}
	return *o.SplitByLabelOrder
}

// GetSplitByLabelOrderOk returns a tuple with the SplitByLabelOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfusionMatrixTableParams) GetSplitByLabelOrderOk() (*OrderType, bool) {
	if o == nil || IsNil(o.SplitByLabelOrder) {
		return nil, false
	}
	return o.SplitByLabelOrder, true
}

// HasSplitByLabelOrder returns a boolean if a field has been set.
func (o *ConfusionMatrixTableParams) HasSplitByLabelOrder() bool {
	if o != nil && !IsNil(o.SplitByLabelOrder) {
		return true
	}

	return false
}

// SetSplitByLabelOrder gets a reference to the given OrderType and assigns it to the SplitByLabelOrder field.
func (o *ConfusionMatrixTableParams) SetSplitByLabelOrder(v OrderType) {
	o.SplitByLabelOrder = &v
}

// GetSplitByLabel returns the SplitByLabel field value
func (o *ConfusionMatrixTableParams) GetSplitByLabel() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SplitByLabel
}

// GetSplitByLabelOk returns a tuple with the SplitByLabel field value
// and a boolean to check if the value has been set.
func (o *ConfusionMatrixTableParams) GetSplitByLabelOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SplitByLabel, true
}

// SetSplitByLabel sets field value
func (o *ConfusionMatrixTableParams) SetSplitByLabel(v bool) {
	o.SplitByLabel = v
}

// GetFilterLabels returns the FilterLabels field value if set, zero value otherwise.
func (o *ConfusionMatrixTableParams) GetFilterLabels() []string {
	if o == nil || IsNil(o.FilterLabels) {
		var ret []string
		return ret
	}
	return o.FilterLabels
}

// GetFilterLabelsOk returns a tuple with the FilterLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfusionMatrixTableParams) GetFilterLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.FilterLabels) {
		return nil, false
	}
	return o.FilterLabels, true
}

// HasFilterLabels returns a boolean if a field has been set.
func (o *ConfusionMatrixTableParams) HasFilterLabels() bool {
	if o != nil && !IsNil(o.FilterLabels) {
		return true
	}

	return false
}

// SetFilterLabels gets a reference to the given []string and assigns it to the FilterLabels field.
func (o *ConfusionMatrixTableParams) SetFilterLabels(v []string) {
	o.FilterLabels = v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *ConfusionMatrixTableParams) GetThreshold() float64 {
	if o == nil || IsNil(o.Threshold) {
		var ret float64
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfusionMatrixTableParams) GetThresholdOk() (*float64, bool) {
	if o == nil || IsNil(o.Threshold) {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *ConfusionMatrixTableParams) HasThreshold() bool {
	if o != nil && !IsNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given float64 and assigns it to the Threshold field.
func (o *ConfusionMatrixTableParams) SetThreshold(v float64) {
	o.Threshold = &v
}

func (o ConfusionMatrixTableParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfusionMatrixTableParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sessionRunIds"] = o.SessionRunIds
	toSerialize["projectId"] = o.ProjectId
	toSerialize["customMetricName"] = o.CustomMetricName
	if !IsNil(o.VerticalSplit) {
		toSerialize["verticalSplit"] = o.VerticalSplit
	}
	if !IsNil(o.HorizontalSplit) {
		toSerialize["horizontalSplit"] = o.HorizontalSplit
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.SplitByLabelOrder) {
		toSerialize["splitByLabelOrder"] = o.SplitByLabelOrder
	}
	toSerialize["splitByLabel"] = o.SplitByLabel
	if !IsNil(o.FilterLabels) {
		toSerialize["filterLabels"] = o.FilterLabels
	}
	if !IsNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	return toSerialize, nil
}

type NullableConfusionMatrixTableParams struct {
	value *ConfusionMatrixTableParams
	isSet bool
}

func (v NullableConfusionMatrixTableParams) Get() *ConfusionMatrixTableParams {
	return v.value
}

func (v *NullableConfusionMatrixTableParams) Set(val *ConfusionMatrixTableParams) {
	v.value = val
	v.isSet = true
}

func (v NullableConfusionMatrixTableParams) IsSet() bool {
	return v.isSet
}

func (v *NullableConfusionMatrixTableParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfusionMatrixTableParams(val *ConfusionMatrixTableParams) *NullableConfusionMatrixTableParams {
	return &NullableConfusionMatrixTableParams{value: val, isSet: true}
}

func (v NullableConfusionMatrixTableParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfusionMatrixTableParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
