/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.464
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the PopulationExplorationJobParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PopulationExplorationJobParams{}

// PopulationExplorationJobParams struct for PopulationExplorationJobParams
type PopulationExplorationJobParams struct {
	ProjectionMetric *string    `json:"projectionMetric,omitempty"`
	Digest           string     `json:"digest"`
	Filters          []ESFilter `json:"filters,omitempty"`
	FromEpoch        float64    `json:"fromEpoch"`
	NumOfSamples     float64    `json:"numOfSamples"`
	BatchSize        float64    `json:"batchSize"`
	SessionRunId     string     `json:"sessionRunId"`
	Type             string     `json:"type"`
}

// NewPopulationExplorationJobParams instantiates a new PopulationExplorationJobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPopulationExplorationJobParams(digest string, fromEpoch float64, numOfSamples float64, batchSize float64, sessionRunId string, type_ string) *PopulationExplorationJobParams {
	this := PopulationExplorationJobParams{}
	this.Digest = digest
	this.FromEpoch = fromEpoch
	this.NumOfSamples = numOfSamples
	this.BatchSize = batchSize
	this.SessionRunId = sessionRunId
	this.Type = type_
	return &this
}

// NewPopulationExplorationJobParamsWithDefaults instantiates a new PopulationExplorationJobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPopulationExplorationJobParamsWithDefaults() *PopulationExplorationJobParams {
	this := PopulationExplorationJobParams{}
	return &this
}

// GetProjectionMetric returns the ProjectionMetric field value if set, zero value otherwise.
func (o *PopulationExplorationJobParams) GetProjectionMetric() string {
	if o == nil || IsNil(o.ProjectionMetric) {
		var ret string
		return ret
	}
	return *o.ProjectionMetric
}

// GetProjectionMetricOk returns a tuple with the ProjectionMetric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PopulationExplorationJobParams) GetProjectionMetricOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectionMetric) {
		return nil, false
	}
	return o.ProjectionMetric, true
}

// HasProjectionMetric returns a boolean if a field has been set.
func (o *PopulationExplorationJobParams) HasProjectionMetric() bool {
	if o != nil && !IsNil(o.ProjectionMetric) {
		return true
	}

	return false
}

// SetProjectionMetric gets a reference to the given string and assigns it to the ProjectionMetric field.
func (o *PopulationExplorationJobParams) SetProjectionMetric(v string) {
	o.ProjectionMetric = &v
}

// GetDigest returns the Digest field value
func (o *PopulationExplorationJobParams) GetDigest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Digest
}

// GetDigestOk returns a tuple with the Digest field value
// and a boolean to check if the value has been set.
func (o *PopulationExplorationJobParams) GetDigestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Digest, true
}

// SetDigest sets field value
func (o *PopulationExplorationJobParams) SetDigest(v string) {
	o.Digest = v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *PopulationExplorationJobParams) GetFilters() []ESFilter {
	if o == nil || IsNil(o.Filters) {
		var ret []ESFilter
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PopulationExplorationJobParams) GetFiltersOk() ([]ESFilter, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *PopulationExplorationJobParams) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []ESFilter and assigns it to the Filters field.
func (o *PopulationExplorationJobParams) SetFilters(v []ESFilter) {
	o.Filters = v
}

// GetFromEpoch returns the FromEpoch field value
func (o *PopulationExplorationJobParams) GetFromEpoch() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.FromEpoch
}

// GetFromEpochOk returns a tuple with the FromEpoch field value
// and a boolean to check if the value has been set.
func (o *PopulationExplorationJobParams) GetFromEpochOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromEpoch, true
}

// SetFromEpoch sets field value
func (o *PopulationExplorationJobParams) SetFromEpoch(v float64) {
	o.FromEpoch = v
}

// GetNumOfSamples returns the NumOfSamples field value
func (o *PopulationExplorationJobParams) GetNumOfSamples() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.NumOfSamples
}

// GetNumOfSamplesOk returns a tuple with the NumOfSamples field value
// and a boolean to check if the value has been set.
func (o *PopulationExplorationJobParams) GetNumOfSamplesOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumOfSamples, true
}

// SetNumOfSamples sets field value
func (o *PopulationExplorationJobParams) SetNumOfSamples(v float64) {
	o.NumOfSamples = v
}

// GetBatchSize returns the BatchSize field value
func (o *PopulationExplorationJobParams) GetBatchSize() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.BatchSize
}

// GetBatchSizeOk returns a tuple with the BatchSize field value
// and a boolean to check if the value has been set.
func (o *PopulationExplorationJobParams) GetBatchSizeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BatchSize, true
}

// SetBatchSize sets field value
func (o *PopulationExplorationJobParams) SetBatchSize(v float64) {
	o.BatchSize = v
}

// GetSessionRunId returns the SessionRunId field value
func (o *PopulationExplorationJobParams) GetSessionRunId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionRunId
}

// GetSessionRunIdOk returns a tuple with the SessionRunId field value
// and a boolean to check if the value has been set.
func (o *PopulationExplorationJobParams) GetSessionRunIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionRunId, true
}

// SetSessionRunId sets field value
func (o *PopulationExplorationJobParams) SetSessionRunId(v string) {
	o.SessionRunId = v
}

// GetType returns the Type field value
func (o *PopulationExplorationJobParams) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PopulationExplorationJobParams) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PopulationExplorationJobParams) SetType(v string) {
	o.Type = v
}

func (o PopulationExplorationJobParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PopulationExplorationJobParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectionMetric) {
		toSerialize["projectionMetric"] = o.ProjectionMetric
	}
	toSerialize["digest"] = o.Digest
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	toSerialize["fromEpoch"] = o.FromEpoch
	toSerialize["numOfSamples"] = o.NumOfSamples
	toSerialize["batchSize"] = o.BatchSize
	toSerialize["sessionRunId"] = o.SessionRunId
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullablePopulationExplorationJobParams struct {
	value *PopulationExplorationJobParams
	isSet bool
}

func (v NullablePopulationExplorationJobParams) Get() *PopulationExplorationJobParams {
	return v.value
}

func (v *NullablePopulationExplorationJobParams) Set(val *PopulationExplorationJobParams) {
	v.value = val
	v.isSet = true
}

func (v NullablePopulationExplorationJobParams) IsSet() bool {
	return v.isSet
}

func (v *NullablePopulationExplorationJobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePopulationExplorationJobParams(val *PopulationExplorationJobParams) *NullablePopulationExplorationJobParams {
	return &NullablePopulationExplorationJobParams{value: val, isSet: true}
}

func (v NullablePopulationExplorationJobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePopulationExplorationJobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
