/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.607
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the UpsertStateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpsertStateResponse{}

// UpsertStateResponse struct for UpsertStateResponse
type UpsertStateResponse struct {
	Digest string `json:"digest"`
}

// NewUpsertStateResponse instantiates a new UpsertStateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpsertStateResponse(digest string) *UpsertStateResponse {
	this := UpsertStateResponse{}
	this.Digest = digest
	return &this
}

// NewUpsertStateResponseWithDefaults instantiates a new UpsertStateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpsertStateResponseWithDefaults() *UpsertStateResponse {
	this := UpsertStateResponse{}
	return &this
}

// GetDigest returns the Digest field value
func (o *UpsertStateResponse) GetDigest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Digest
}

// GetDigestOk returns a tuple with the Digest field value
// and a boolean to check if the value has been set.
func (o *UpsertStateResponse) GetDigestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Digest, true
}

// SetDigest sets field value
func (o *UpsertStateResponse) SetDigest(v string) {
	o.Digest = v
}

func (o UpsertStateResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpsertStateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["digest"] = o.Digest
	return toSerialize, nil
}

type NullableUpsertStateResponse struct {
	value *UpsertStateResponse
	isSet bool
}

func (v NullableUpsertStateResponse) Get() *UpsertStateResponse {
	return v.value
}

func (v *NullableUpsertStateResponse) Set(val *UpsertStateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpsertStateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpsertStateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpsertStateResponse(val *UpsertStateResponse) *NullableUpsertStateResponse {
	return &NullableUpsertStateResponse{value: val, isSet: true}
}

func (v NullableUpsertStateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpsertStateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
