/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.557
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the PopulationExplorationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PopulationExplorationResponse{}

// PopulationExplorationResponse struct for PopulationExplorationResponse
type PopulationExplorationResponse struct {
	Status         JobStatus                             `json:"status"`
	JobId          *string                               `json:"jobId,omitempty"`
	ReadyArtifacts PartialPopulationExplorationArtifacts `json:"readyArtifacts"`
}

// NewPopulationExplorationResponse instantiates a new PopulationExplorationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPopulationExplorationResponse(status JobStatus, readyArtifacts PartialPopulationExplorationArtifacts) *PopulationExplorationResponse {
	this := PopulationExplorationResponse{}
	this.Status = status
	this.ReadyArtifacts = readyArtifacts
	return &this
}

// NewPopulationExplorationResponseWithDefaults instantiates a new PopulationExplorationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPopulationExplorationResponseWithDefaults() *PopulationExplorationResponse {
	this := PopulationExplorationResponse{}
	return &this
}

// GetStatus returns the Status field value
func (o *PopulationExplorationResponse) GetStatus() JobStatus {
	if o == nil {
		var ret JobStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PopulationExplorationResponse) GetStatusOk() (*JobStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PopulationExplorationResponse) SetStatus(v JobStatus) {
	o.Status = v
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *PopulationExplorationResponse) GetJobId() string {
	if o == nil || IsNil(o.JobId) {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PopulationExplorationResponse) GetJobIdOk() (*string, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *PopulationExplorationResponse) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
func (o *PopulationExplorationResponse) SetJobId(v string) {
	o.JobId = &v
}

// GetReadyArtifacts returns the ReadyArtifacts field value
func (o *PopulationExplorationResponse) GetReadyArtifacts() PartialPopulationExplorationArtifacts {
	if o == nil {
		var ret PartialPopulationExplorationArtifacts
		return ret
	}

	return o.ReadyArtifacts
}

// GetReadyArtifactsOk returns a tuple with the ReadyArtifacts field value
// and a boolean to check if the value has been set.
func (o *PopulationExplorationResponse) GetReadyArtifactsOk() (*PartialPopulationExplorationArtifacts, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadyArtifacts, true
}

// SetReadyArtifacts sets field value
func (o *PopulationExplorationResponse) SetReadyArtifacts(v PartialPopulationExplorationArtifacts) {
	o.ReadyArtifacts = v
}

func (o PopulationExplorationResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PopulationExplorationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	if !IsNil(o.JobId) {
		toSerialize["jobId"] = o.JobId
	}
	toSerialize["readyArtifacts"] = o.ReadyArtifacts
	return toSerialize, nil
}

type NullablePopulationExplorationResponse struct {
	value *PopulationExplorationResponse
	isSet bool
}

func (v NullablePopulationExplorationResponse) Get() *PopulationExplorationResponse {
	return v.value
}

func (v *NullablePopulationExplorationResponse) Set(val *PopulationExplorationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePopulationExplorationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePopulationExplorationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePopulationExplorationResponse(val *PopulationExplorationResponse) *NullablePopulationExplorationResponse {
	return &NullablePopulationExplorationResponse{value: val, isSet: true}
}

func (v NullablePopulationExplorationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePopulationExplorationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
