/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.360
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the ValidatedNode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidatedNode{}

// ValidatedNode struct for ValidatedNode
type ValidatedNode struct {
	Name           string  `json:"name"`
	NodeId         *string `json:"node_id,omitempty"`
	ConnectionName *string `json:"connection_name,omitempty"`
	Error          *string `json:"error,omitempty"`
}

// NewValidatedNode instantiates a new ValidatedNode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidatedNode(name string) *ValidatedNode {
	this := ValidatedNode{}
	this.Name = name
	return &this
}

// NewValidatedNodeWithDefaults instantiates a new ValidatedNode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidatedNodeWithDefaults() *ValidatedNode {
	this := ValidatedNode{}
	return &this
}

// GetName returns the Name field value
func (o *ValidatedNode) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ValidatedNode) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ValidatedNode) SetName(v string) {
	o.Name = v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *ValidatedNode) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedNode) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *ValidatedNode) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *ValidatedNode) SetNodeId(v string) {
	o.NodeId = &v
}

// GetConnectionName returns the ConnectionName field value if set, zero value otherwise.
func (o *ValidatedNode) GetConnectionName() string {
	if o == nil || IsNil(o.ConnectionName) {
		var ret string
		return ret
	}
	return *o.ConnectionName
}

// GetConnectionNameOk returns a tuple with the ConnectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedNode) GetConnectionNameOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionName) {
		return nil, false
	}
	return o.ConnectionName, true
}

// HasConnectionName returns a boolean if a field has been set.
func (o *ValidatedNode) HasConnectionName() bool {
	if o != nil && !IsNil(o.ConnectionName) {
		return true
	}

	return false
}

// SetConnectionName gets a reference to the given string and assigns it to the ConnectionName field.
func (o *ValidatedNode) SetConnectionName(v string) {
	o.ConnectionName = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ValidatedNode) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedNode) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ValidatedNode) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *ValidatedNode) SetError(v string) {
	o.Error = &v
}

func (o ValidatedNode) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidatedNode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !IsNil(o.ConnectionName) {
		toSerialize["connection_name"] = o.ConnectionName
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableValidatedNode struct {
	value *ValidatedNode
	isSet bool
}

func (v NullableValidatedNode) Get() *ValidatedNode {
	return v.value
}

func (v *NullableValidatedNode) Set(val *ValidatedNode) {
	v.value = val
	v.isSet = true
}

func (v NullableValidatedNode) IsSet() bool {
	return v.isSet
}

func (v *NullableValidatedNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidatedNode(val *ValidatedNode) *NullableValidatedNode {
	return &NullableValidatedNode{value: val, isSet: true}
}

func (v NullableValidatedNode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidatedNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
