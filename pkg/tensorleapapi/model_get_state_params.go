/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.618
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the GetStateParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetStateParams{}

// GetStateParams struct for GetStateParams
type GetStateParams struct {
	ProjectId string `json:"projectId"`
	Digest    string `json:"digest"`
}

// NewGetStateParams instantiates a new GetStateParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetStateParams(projectId string, digest string) *GetStateParams {
	this := GetStateParams{}
	this.ProjectId = projectId
	this.Digest = digest
	return &this
}

// NewGetStateParamsWithDefaults instantiates a new GetStateParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetStateParamsWithDefaults() *GetStateParams {
	this := GetStateParams{}
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *GetStateParams) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *GetStateParams) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *GetStateParams) SetProjectId(v string) {
	o.ProjectId = v
}

// GetDigest returns the Digest field value
func (o *GetStateParams) GetDigest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Digest
}

// GetDigestOk returns a tuple with the Digest field value
// and a boolean to check if the value has been set.
func (o *GetStateParams) GetDigestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Digest, true
}

// SetDigest sets field value
func (o *GetStateParams) SetDigest(v string) {
	o.Digest = v
}

func (o GetStateParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetStateParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["projectId"] = o.ProjectId
	toSerialize["digest"] = o.Digest
	return toSerialize, nil
}

type NullableGetStateParams struct {
	value *GetStateParams
	isSet bool
}

func (v NullableGetStateParams) Get() *GetStateParams {
	return v.value
}

func (v *NullableGetStateParams) Set(val *GetStateParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGetStateParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGetStateParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetStateParams(val *GetStateParams) *NullableGetStateParams {
	return &NullableGetStateParams{value: val, isSet: true}
}

func (v NullableGetStateParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetStateParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
