/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.467
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the ExportProjectRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportProjectRequest{}

// ExportProjectRequest struct for ExportProjectRequest
type ExportProjectRequest struct {
	ProjectId string         `json:"projectId"`
	CopyToUrl *string        `json:"copyToUrl,omitempty"`
	NoCache   *bool          `json:"noCache,omitempty"`
	Options   *ExportOptions `json:"options,omitempty"`
}

// NewExportProjectRequest instantiates a new ExportProjectRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportProjectRequest(projectId string) *ExportProjectRequest {
	this := ExportProjectRequest{}
	this.ProjectId = projectId
	return &this
}

// NewExportProjectRequestWithDefaults instantiates a new ExportProjectRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportProjectRequestWithDefaults() *ExportProjectRequest {
	this := ExportProjectRequest{}
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *ExportProjectRequest) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ExportProjectRequest) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *ExportProjectRequest) SetProjectId(v string) {
	o.ProjectId = v
}

// GetCopyToUrl returns the CopyToUrl field value if set, zero value otherwise.
func (o *ExportProjectRequest) GetCopyToUrl() string {
	if o == nil || IsNil(o.CopyToUrl) {
		var ret string
		return ret
	}
	return *o.CopyToUrl
}

// GetCopyToUrlOk returns a tuple with the CopyToUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportProjectRequest) GetCopyToUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CopyToUrl) {
		return nil, false
	}
	return o.CopyToUrl, true
}

// HasCopyToUrl returns a boolean if a field has been set.
func (o *ExportProjectRequest) HasCopyToUrl() bool {
	if o != nil && !IsNil(o.CopyToUrl) {
		return true
	}

	return false
}

// SetCopyToUrl gets a reference to the given string and assigns it to the CopyToUrl field.
func (o *ExportProjectRequest) SetCopyToUrl(v string) {
	o.CopyToUrl = &v
}

// GetNoCache returns the NoCache field value if set, zero value otherwise.
func (o *ExportProjectRequest) GetNoCache() bool {
	if o == nil || IsNil(o.NoCache) {
		var ret bool
		return ret
	}
	return *o.NoCache
}

// GetNoCacheOk returns a tuple with the NoCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportProjectRequest) GetNoCacheOk() (*bool, bool) {
	if o == nil || IsNil(o.NoCache) {
		return nil, false
	}
	return o.NoCache, true
}

// HasNoCache returns a boolean if a field has been set.
func (o *ExportProjectRequest) HasNoCache() bool {
	if o != nil && !IsNil(o.NoCache) {
		return true
	}

	return false
}

// SetNoCache gets a reference to the given bool and assigns it to the NoCache field.
func (o *ExportProjectRequest) SetNoCache(v bool) {
	o.NoCache = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ExportProjectRequest) GetOptions() ExportOptions {
	if o == nil || IsNil(o.Options) {
		var ret ExportOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportProjectRequest) GetOptionsOk() (*ExportOptions, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ExportProjectRequest) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given ExportOptions and assigns it to the Options field.
func (o *ExportProjectRequest) SetOptions(v ExportOptions) {
	o.Options = &v
}

func (o ExportProjectRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportProjectRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["projectId"] = o.ProjectId
	if !IsNil(o.CopyToUrl) {
		toSerialize["copyToUrl"] = o.CopyToUrl
	}
	if !IsNil(o.NoCache) {
		toSerialize["noCache"] = o.NoCache
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	return toSerialize, nil
}

type NullableExportProjectRequest struct {
	value *ExportProjectRequest
	isSet bool
}

func (v NullableExportProjectRequest) Get() *ExportProjectRequest {
	return v.value
}

func (v *NullableExportProjectRequest) Set(val *ExportProjectRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExportProjectRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExportProjectRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportProjectRequest(val *ExportProjectRequest) *NullableExportProjectRequest {
	return &NullableExportProjectRequest{value: val, isSet: true}
}

func (v NullableExportProjectRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportProjectRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
