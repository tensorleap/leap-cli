/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.526
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the GetGeneratedDashletsParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetGeneratedDashletsParams{}

// GetGeneratedDashletsParams struct for GetGeneratedDashletsParams
type GetGeneratedDashletsParams struct {
	ProjectId     string   `json:"projectId"`
	SessionRunIds []string `json:"sessionRunIds"`
	Threshold     *float64 `json:"threshold,omitempty"`
	ResetPrevious *bool    `json:"resetPrevious,omitempty"`
}

// NewGetGeneratedDashletsParams instantiates a new GetGeneratedDashletsParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetGeneratedDashletsParams(projectId string, sessionRunIds []string) *GetGeneratedDashletsParams {
	this := GetGeneratedDashletsParams{}
	this.ProjectId = projectId
	this.SessionRunIds = sessionRunIds
	return &this
}

// NewGetGeneratedDashletsParamsWithDefaults instantiates a new GetGeneratedDashletsParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetGeneratedDashletsParamsWithDefaults() *GetGeneratedDashletsParams {
	this := GetGeneratedDashletsParams{}
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *GetGeneratedDashletsParams) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *GetGeneratedDashletsParams) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *GetGeneratedDashletsParams) SetProjectId(v string) {
	o.ProjectId = v
}

// GetSessionRunIds returns the SessionRunIds field value
func (o *GetGeneratedDashletsParams) GetSessionRunIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SessionRunIds
}

// GetSessionRunIdsOk returns a tuple with the SessionRunIds field value
// and a boolean to check if the value has been set.
func (o *GetGeneratedDashletsParams) GetSessionRunIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SessionRunIds, true
}

// SetSessionRunIds sets field value
func (o *GetGeneratedDashletsParams) SetSessionRunIds(v []string) {
	o.SessionRunIds = v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *GetGeneratedDashletsParams) GetThreshold() float64 {
	if o == nil || IsNil(o.Threshold) {
		var ret float64
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGeneratedDashletsParams) GetThresholdOk() (*float64, bool) {
	if o == nil || IsNil(o.Threshold) {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *GetGeneratedDashletsParams) HasThreshold() bool {
	if o != nil && !IsNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given float64 and assigns it to the Threshold field.
func (o *GetGeneratedDashletsParams) SetThreshold(v float64) {
	o.Threshold = &v
}

// GetResetPrevious returns the ResetPrevious field value if set, zero value otherwise.
func (o *GetGeneratedDashletsParams) GetResetPrevious() bool {
	if o == nil || IsNil(o.ResetPrevious) {
		var ret bool
		return ret
	}
	return *o.ResetPrevious
}

// GetResetPreviousOk returns a tuple with the ResetPrevious field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGeneratedDashletsParams) GetResetPreviousOk() (*bool, bool) {
	if o == nil || IsNil(o.ResetPrevious) {
		return nil, false
	}
	return o.ResetPrevious, true
}

// HasResetPrevious returns a boolean if a field has been set.
func (o *GetGeneratedDashletsParams) HasResetPrevious() bool {
	if o != nil && !IsNil(o.ResetPrevious) {
		return true
	}

	return false
}

// SetResetPrevious gets a reference to the given bool and assigns it to the ResetPrevious field.
func (o *GetGeneratedDashletsParams) SetResetPrevious(v bool) {
	o.ResetPrevious = &v
}

func (o GetGeneratedDashletsParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetGeneratedDashletsParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["projectId"] = o.ProjectId
	toSerialize["sessionRunIds"] = o.SessionRunIds
	if !IsNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	if !IsNil(o.ResetPrevious) {
		toSerialize["resetPrevious"] = o.ResetPrevious
	}
	return toSerialize, nil
}

type NullableGetGeneratedDashletsParams struct {
	value *GetGeneratedDashletsParams
	isSet bool
}

func (v NullableGetGeneratedDashletsParams) Get() *GetGeneratedDashletsParams {
	return v.value
}

func (v *NullableGetGeneratedDashletsParams) Set(val *GetGeneratedDashletsParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGeneratedDashletsParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGeneratedDashletsParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGeneratedDashletsParams(val *GetGeneratedDashletsParams) *NullableGetGeneratedDashletsParams {
	return &NullableGetGeneratedDashletsParams{value: val, isSet: true}
}

func (v NullableGetGeneratedDashletsParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGeneratedDashletsParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
