/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.592
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the GenericBaseImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenericBaseImage{}

// GenericBaseImage struct for GenericBaseImage
type GenericBaseImage struct {
	Id          string `json:"id"`
	DisplayName string `json:"displayName"`
	Image       string `json:"image"`
	Tag         string `json:"tag"`
}

// NewGenericBaseImage instantiates a new GenericBaseImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericBaseImage(id string, displayName string, image string, tag string) *GenericBaseImage {
	this := GenericBaseImage{}
	this.Id = id
	this.DisplayName = displayName
	this.Image = image
	this.Tag = tag
	return &this
}

// NewGenericBaseImageWithDefaults instantiates a new GenericBaseImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericBaseImageWithDefaults() *GenericBaseImage {
	this := GenericBaseImage{}
	return &this
}

// GetId returns the Id field value
func (o *GenericBaseImage) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GenericBaseImage) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GenericBaseImage) SetId(v string) {
	o.Id = v
}

// GetDisplayName returns the DisplayName field value
func (o *GenericBaseImage) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *GenericBaseImage) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *GenericBaseImage) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetImage returns the Image field value
func (o *GenericBaseImage) GetImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *GenericBaseImage) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *GenericBaseImage) SetImage(v string) {
	o.Image = v
}

// GetTag returns the Tag field value
func (o *GenericBaseImage) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *GenericBaseImage) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *GenericBaseImage) SetTag(v string) {
	o.Tag = v
}

func (o GenericBaseImage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenericBaseImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["displayName"] = o.DisplayName
	toSerialize["image"] = o.Image
	toSerialize["tag"] = o.Tag
	return toSerialize, nil
}

type NullableGenericBaseImage struct {
	value *GenericBaseImage
	isSet bool
}

func (v NullableGenericBaseImage) Get() *GenericBaseImage {
	return v.value
}

func (v *NullableGenericBaseImage) Set(val *GenericBaseImage) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericBaseImage) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericBaseImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericBaseImage(val *GenericBaseImage) *NullableGenericBaseImage {
	return &NullableGenericBaseImage{value: val, isSet: true}
}

func (v NullableGenericBaseImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericBaseImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
