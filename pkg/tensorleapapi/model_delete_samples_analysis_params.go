/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.638
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the DeleteSamplesAnalysisParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteSamplesAnalysisParams{}

// DeleteSamplesAnalysisParams struct for DeleteSamplesAnalysisParams
type DeleteSamplesAnalysisParams struct {
	ProjectId         string           `json:"projectId"`
	SessionRunIds     []string         `json:"sessionRunIds"`
	SamplesIdentities []SampleIdentity `json:"samplesIdentities"`
}

// NewDeleteSamplesAnalysisParams instantiates a new DeleteSamplesAnalysisParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteSamplesAnalysisParams(projectId string, sessionRunIds []string, samplesIdentities []SampleIdentity) *DeleteSamplesAnalysisParams {
	this := DeleteSamplesAnalysisParams{}
	this.ProjectId = projectId
	this.SessionRunIds = sessionRunIds
	this.SamplesIdentities = samplesIdentities
	return &this
}

// NewDeleteSamplesAnalysisParamsWithDefaults instantiates a new DeleteSamplesAnalysisParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteSamplesAnalysisParamsWithDefaults() *DeleteSamplesAnalysisParams {
	this := DeleteSamplesAnalysisParams{}
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *DeleteSamplesAnalysisParams) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *DeleteSamplesAnalysisParams) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *DeleteSamplesAnalysisParams) SetProjectId(v string) {
	o.ProjectId = v
}

// GetSessionRunIds returns the SessionRunIds field value
func (o *DeleteSamplesAnalysisParams) GetSessionRunIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SessionRunIds
}

// GetSessionRunIdsOk returns a tuple with the SessionRunIds field value
// and a boolean to check if the value has been set.
func (o *DeleteSamplesAnalysisParams) GetSessionRunIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SessionRunIds, true
}

// SetSessionRunIds sets field value
func (o *DeleteSamplesAnalysisParams) SetSessionRunIds(v []string) {
	o.SessionRunIds = v
}

// GetSamplesIdentities returns the SamplesIdentities field value
func (o *DeleteSamplesAnalysisParams) GetSamplesIdentities() []SampleIdentity {
	if o == nil {
		var ret []SampleIdentity
		return ret
	}

	return o.SamplesIdentities
}

// GetSamplesIdentitiesOk returns a tuple with the SamplesIdentities field value
// and a boolean to check if the value has been set.
func (o *DeleteSamplesAnalysisParams) GetSamplesIdentitiesOk() ([]SampleIdentity, bool) {
	if o == nil {
		return nil, false
	}
	return o.SamplesIdentities, true
}

// SetSamplesIdentities sets field value
func (o *DeleteSamplesAnalysisParams) SetSamplesIdentities(v []SampleIdentity) {
	o.SamplesIdentities = v
}

func (o DeleteSamplesAnalysisParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteSamplesAnalysisParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["projectId"] = o.ProjectId
	toSerialize["sessionRunIds"] = o.SessionRunIds
	toSerialize["samplesIdentities"] = o.SamplesIdentities
	return toSerialize, nil
}

type NullableDeleteSamplesAnalysisParams struct {
	value *DeleteSamplesAnalysisParams
	isSet bool
}

func (v NullableDeleteSamplesAnalysisParams) Get() *DeleteSamplesAnalysisParams {
	return v.value
}

func (v *NullableDeleteSamplesAnalysisParams) Set(val *DeleteSamplesAnalysisParams) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteSamplesAnalysisParams) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteSamplesAnalysisParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteSamplesAnalysisParams(val *DeleteSamplesAnalysisParams) *NullableDeleteSamplesAnalysisParams {
	return &NullableDeleteSamplesAnalysisParams{value: val, isSet: true}
}

func (v NullableDeleteSamplesAnalysisParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteSamplesAnalysisParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
