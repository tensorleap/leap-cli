/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.634
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the CreateEquivalentValidationParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEquivalentValidationParams{}

// CreateEquivalentValidationParams struct for CreateEquivalentValidationParams
type CreateEquivalentValidationParams struct {
	ProjectId    string `json:"projectId"`
	SourceDigest string `json:"sourceDigest"`
	TargetDigest string `json:"targetDigest"`
}

// NewCreateEquivalentValidationParams instantiates a new CreateEquivalentValidationParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEquivalentValidationParams(projectId string, sourceDigest string, targetDigest string) *CreateEquivalentValidationParams {
	this := CreateEquivalentValidationParams{}
	this.ProjectId = projectId
	this.SourceDigest = sourceDigest
	this.TargetDigest = targetDigest
	return &this
}

// NewCreateEquivalentValidationParamsWithDefaults instantiates a new CreateEquivalentValidationParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEquivalentValidationParamsWithDefaults() *CreateEquivalentValidationParams {
	this := CreateEquivalentValidationParams{}
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *CreateEquivalentValidationParams) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *CreateEquivalentValidationParams) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *CreateEquivalentValidationParams) SetProjectId(v string) {
	o.ProjectId = v
}

// GetSourceDigest returns the SourceDigest field value
func (o *CreateEquivalentValidationParams) GetSourceDigest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceDigest
}

// GetSourceDigestOk returns a tuple with the SourceDigest field value
// and a boolean to check if the value has been set.
func (o *CreateEquivalentValidationParams) GetSourceDigestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceDigest, true
}

// SetSourceDigest sets field value
func (o *CreateEquivalentValidationParams) SetSourceDigest(v string) {
	o.SourceDigest = v
}

// GetTargetDigest returns the TargetDigest field value
func (o *CreateEquivalentValidationParams) GetTargetDigest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetDigest
}

// GetTargetDigestOk returns a tuple with the TargetDigest field value
// and a boolean to check if the value has been set.
func (o *CreateEquivalentValidationParams) GetTargetDigestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetDigest, true
}

// SetTargetDigest sets field value
func (o *CreateEquivalentValidationParams) SetTargetDigest(v string) {
	o.TargetDigest = v
}

func (o CreateEquivalentValidationParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEquivalentValidationParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["projectId"] = o.ProjectId
	toSerialize["sourceDigest"] = o.SourceDigest
	toSerialize["targetDigest"] = o.TargetDigest
	return toSerialize, nil
}

type NullableCreateEquivalentValidationParams struct {
	value *CreateEquivalentValidationParams
	isSet bool
}

func (v NullableCreateEquivalentValidationParams) Get() *CreateEquivalentValidationParams {
	return v.value
}

func (v *NullableCreateEquivalentValidationParams) Set(val *CreateEquivalentValidationParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEquivalentValidationParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEquivalentValidationParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEquivalentValidationParams(val *CreateEquivalentValidationParams) *NullableCreateEquivalentValidationParams {
	return &NullableCreateEquivalentValidationParams{value: val, isSet: true}
}

func (v NullableCreateEquivalentValidationParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEquivalentValidationParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
