/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.638
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the FailureInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FailureInfo{}

// FailureInfo struct for FailureInfo
type FailureInfo struct {
	Message          string            `json:"message"`
	EngineSettingKey *EngineSettingKey `json:"engineSettingKey,omitempty"`
	ExtraFailureData *string           `json:"extraFailureData,omitempty"`
}

// NewFailureInfo instantiates a new FailureInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFailureInfo(message string) *FailureInfo {
	this := FailureInfo{}
	this.Message = message
	return &this
}

// NewFailureInfoWithDefaults instantiates a new FailureInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFailureInfoWithDefaults() *FailureInfo {
	this := FailureInfo{}
	return &this
}

// GetMessage returns the Message field value
func (o *FailureInfo) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *FailureInfo) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *FailureInfo) SetMessage(v string) {
	o.Message = v
}

// GetEngineSettingKey returns the EngineSettingKey field value if set, zero value otherwise.
func (o *FailureInfo) GetEngineSettingKey() EngineSettingKey {
	if o == nil || IsNil(o.EngineSettingKey) {
		var ret EngineSettingKey
		return ret
	}
	return *o.EngineSettingKey
}

// GetEngineSettingKeyOk returns a tuple with the EngineSettingKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FailureInfo) GetEngineSettingKeyOk() (*EngineSettingKey, bool) {
	if o == nil || IsNil(o.EngineSettingKey) {
		return nil, false
	}
	return o.EngineSettingKey, true
}

// HasEngineSettingKey returns a boolean if a field has been set.
func (o *FailureInfo) HasEngineSettingKey() bool {
	if o != nil && !IsNil(o.EngineSettingKey) {
		return true
	}

	return false
}

// SetEngineSettingKey gets a reference to the given EngineSettingKey and assigns it to the EngineSettingKey field.
func (o *FailureInfo) SetEngineSettingKey(v EngineSettingKey) {
	o.EngineSettingKey = &v
}

// GetExtraFailureData returns the ExtraFailureData field value if set, zero value otherwise.
func (o *FailureInfo) GetExtraFailureData() string {
	if o == nil || IsNil(o.ExtraFailureData) {
		var ret string
		return ret
	}
	return *o.ExtraFailureData
}

// GetExtraFailureDataOk returns a tuple with the ExtraFailureData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FailureInfo) GetExtraFailureDataOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraFailureData) {
		return nil, false
	}
	return o.ExtraFailureData, true
}

// HasExtraFailureData returns a boolean if a field has been set.
func (o *FailureInfo) HasExtraFailureData() bool {
	if o != nil && !IsNil(o.ExtraFailureData) {
		return true
	}

	return false
}

// SetExtraFailureData gets a reference to the given string and assigns it to the ExtraFailureData field.
func (o *FailureInfo) SetExtraFailureData(v string) {
	o.ExtraFailureData = &v
}

func (o FailureInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FailureInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	if !IsNil(o.EngineSettingKey) {
		toSerialize["engineSettingKey"] = o.EngineSettingKey
	}
	if !IsNil(o.ExtraFailureData) {
		toSerialize["extraFailureData"] = o.ExtraFailureData
	}
	return toSerialize, nil
}

type NullableFailureInfo struct {
	value *FailureInfo
	isSet bool
}

func (v NullableFailureInfo) Get() *FailureInfo {
	return v.value
}

func (v *NullableFailureInfo) Set(val *FailureInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableFailureInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableFailureInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFailureInfo(val *FailureInfo) *NullableFailureInfo {
	return &NullableFailureInfo{value: val, isSet: true}
}

func (v NullableFailureInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFailureInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
