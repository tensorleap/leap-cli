/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.378-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the ApplyMappingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplyMappingResponse{}

// ApplyMappingResponse struct for ApplyMappingResponse
type ApplyMappingResponse struct {
	ValidationErrors []MappingError `json:"validationErrors,omitempty"`
	ModelGraph *ModelGraph `json:"modelGraph,omitempty"`
}

// NewApplyMappingResponse instantiates a new ApplyMappingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplyMappingResponse() *ApplyMappingResponse {
	this := ApplyMappingResponse{}
	return &this
}

// NewApplyMappingResponseWithDefaults instantiates a new ApplyMappingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplyMappingResponseWithDefaults() *ApplyMappingResponse {
	this := ApplyMappingResponse{}
	return &this
}

// GetValidationErrors returns the ValidationErrors field value if set, zero value otherwise.
func (o *ApplyMappingResponse) GetValidationErrors() []MappingError {
	if o == nil || IsNil(o.ValidationErrors) {
		var ret []MappingError
		return ret
	}
	return o.ValidationErrors
}

// GetValidationErrorsOk returns a tuple with the ValidationErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplyMappingResponse) GetValidationErrorsOk() ([]MappingError, bool) {
	if o == nil || IsNil(o.ValidationErrors) {
		return nil, false
	}
	return o.ValidationErrors, true
}

// HasValidationErrors returns a boolean if a field has been set.
func (o *ApplyMappingResponse) HasValidationErrors() bool {
	if o != nil && !IsNil(o.ValidationErrors) {
		return true
	}

	return false
}

// SetValidationErrors gets a reference to the given []MappingError and assigns it to the ValidationErrors field.
func (o *ApplyMappingResponse) SetValidationErrors(v []MappingError) {
	o.ValidationErrors = v
}

// GetModelGraph returns the ModelGraph field value if set, zero value otherwise.
func (o *ApplyMappingResponse) GetModelGraph() ModelGraph {
	if o == nil || IsNil(o.ModelGraph) {
		var ret ModelGraph
		return ret
	}
	return *o.ModelGraph
}

// GetModelGraphOk returns a tuple with the ModelGraph field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplyMappingResponse) GetModelGraphOk() (*ModelGraph, bool) {
	if o == nil || IsNil(o.ModelGraph) {
		return nil, false
	}
	return o.ModelGraph, true
}

// HasModelGraph returns a boolean if a field has been set.
func (o *ApplyMappingResponse) HasModelGraph() bool {
	if o != nil && !IsNil(o.ModelGraph) {
		return true
	}

	return false
}

// SetModelGraph gets a reference to the given ModelGraph and assigns it to the ModelGraph field.
func (o *ApplyMappingResponse) SetModelGraph(v ModelGraph) {
	o.ModelGraph = &v
}

func (o ApplyMappingResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplyMappingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ValidationErrors) {
		toSerialize["validationErrors"] = o.ValidationErrors
	}
	if !IsNil(o.ModelGraph) {
		toSerialize["modelGraph"] = o.ModelGraph
	}
	return toSerialize, nil
}

type NullableApplyMappingResponse struct {
	value *ApplyMappingResponse
	isSet bool
}

func (v NullableApplyMappingResponse) Get() *ApplyMappingResponse {
	return v.value
}

func (v *NullableApplyMappingResponse) Set(val *ApplyMappingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApplyMappingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApplyMappingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplyMappingResponse(val *ApplyMappingResponse) *NullableApplyMappingResponse {
	return &NullableApplyMappingResponse{value: val, isSet: true}
}

func (v NullableApplyMappingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplyMappingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


