/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.628
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the LatestExportedProjectItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LatestExportedProjectItem{}

// LatestExportedProjectItem struct for LatestExportedProjectItem
type LatestExportedProjectItem struct {
	ProjectId string  `json:"projectId"`
	Date      float64 `json:"date"`
	FilePath  string  `json:"filePath"`
}

// NewLatestExportedProjectItem instantiates a new LatestExportedProjectItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLatestExportedProjectItem(projectId string, date float64, filePath string) *LatestExportedProjectItem {
	this := LatestExportedProjectItem{}
	this.ProjectId = projectId
	this.Date = date
	this.FilePath = filePath
	return &this
}

// NewLatestExportedProjectItemWithDefaults instantiates a new LatestExportedProjectItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLatestExportedProjectItemWithDefaults() *LatestExportedProjectItem {
	this := LatestExportedProjectItem{}
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *LatestExportedProjectItem) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *LatestExportedProjectItem) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *LatestExportedProjectItem) SetProjectId(v string) {
	o.ProjectId = v
}

// GetDate returns the Date field value
func (o *LatestExportedProjectItem) GetDate() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *LatestExportedProjectItem) GetDateOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *LatestExportedProjectItem) SetDate(v float64) {
	o.Date = v
}

// GetFilePath returns the FilePath field value
func (o *LatestExportedProjectItem) GetFilePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FilePath
}

// GetFilePathOk returns a tuple with the FilePath field value
// and a boolean to check if the value has been set.
func (o *LatestExportedProjectItem) GetFilePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilePath, true
}

// SetFilePath sets field value
func (o *LatestExportedProjectItem) SetFilePath(v string) {
	o.FilePath = v
}

func (o LatestExportedProjectItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LatestExportedProjectItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["projectId"] = o.ProjectId
	toSerialize["date"] = o.Date
	toSerialize["filePath"] = o.FilePath
	return toSerialize, nil
}

type NullableLatestExportedProjectItem struct {
	value *LatestExportedProjectItem
	isSet bool
}

func (v NullableLatestExportedProjectItem) Get() *LatestExportedProjectItem {
	return v.value
}

func (v *NullableLatestExportedProjectItem) Set(val *LatestExportedProjectItem) {
	v.value = val
	v.isSet = true
}

func (v NullableLatestExportedProjectItem) IsSet() bool {
	return v.isSet
}

func (v *NullableLatestExportedProjectItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLatestExportedProjectItem(val *LatestExportedProjectItem) *NullableLatestExportedProjectItem {
	return &NullableLatestExportedProjectItem{value: val, isSet: true}
}

func (v NullableLatestExportedProjectItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLatestExportedProjectItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
