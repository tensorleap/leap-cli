/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.360
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the CustomVisualizationData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomVisualizationData{}

// CustomVisualizationData struct for CustomVisualizationData
type CustomVisualizationData struct {
	// Construct a type with a set of properties K of type T
	Data map[string]interface{} `json:"data"`
	Name string `json:"name"`
	Type CustomVisualizationType `json:"type"`
}

// NewCustomVisualizationData instantiates a new CustomVisualizationData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomVisualizationData(data map[string]interface{}, name string, type_ CustomVisualizationType) *CustomVisualizationData {
	this := CustomVisualizationData{}
	this.Data = data
	this.Name = name
	this.Type = type_
	return &this
}

// NewCustomVisualizationDataWithDefaults instantiates a new CustomVisualizationData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomVisualizationDataWithDefaults() *CustomVisualizationData {
	this := CustomVisualizationData{}
	return &this
}

// GetData returns the Data field value
func (o *CustomVisualizationData) GetData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *CustomVisualizationData) GetDataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *CustomVisualizationData) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetName returns the Name field value
func (o *CustomVisualizationData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CustomVisualizationData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CustomVisualizationData) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *CustomVisualizationData) GetType() CustomVisualizationType {
	if o == nil {
		var ret CustomVisualizationType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CustomVisualizationData) GetTypeOk() (*CustomVisualizationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CustomVisualizationData) SetType(v CustomVisualizationType) {
	o.Type = v
}

func (o CustomVisualizationData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomVisualizationData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableCustomVisualizationData struct {
	value *CustomVisualizationData
	isSet bool
}

func (v NullableCustomVisualizationData) Get() *CustomVisualizationData {
	return v.value
}

func (v *NullableCustomVisualizationData) Set(val *CustomVisualizationData) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomVisualizationData) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomVisualizationData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomVisualizationData(val *CustomVisualizationData) *NullableCustomVisualizationData {
	return &NullableCustomVisualizationData{value: val, isSet: true}
}

func (v NullableCustomVisualizationData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomVisualizationData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


