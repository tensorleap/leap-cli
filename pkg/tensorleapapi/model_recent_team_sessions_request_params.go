/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.618
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the RecentTeamSessionsRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecentTeamSessionsRequestParams{}

// RecentTeamSessionsRequestParams struct for RecentTeamSessionsRequestParams
type RecentTeamSessionsRequestParams struct {
	TopSessions float64 `json:"topSessions"`
	ProjectId   string  `json:"projectId"`
}

// NewRecentTeamSessionsRequestParams instantiates a new RecentTeamSessionsRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecentTeamSessionsRequestParams(topSessions float64, projectId string) *RecentTeamSessionsRequestParams {
	this := RecentTeamSessionsRequestParams{}
	this.TopSessions = topSessions
	this.ProjectId = projectId
	return &this
}

// NewRecentTeamSessionsRequestParamsWithDefaults instantiates a new RecentTeamSessionsRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecentTeamSessionsRequestParamsWithDefaults() *RecentTeamSessionsRequestParams {
	this := RecentTeamSessionsRequestParams{}
	return &this
}

// GetTopSessions returns the TopSessions field value
func (o *RecentTeamSessionsRequestParams) GetTopSessions() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TopSessions
}

// GetTopSessionsOk returns a tuple with the TopSessions field value
// and a boolean to check if the value has been set.
func (o *RecentTeamSessionsRequestParams) GetTopSessionsOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TopSessions, true
}

// SetTopSessions sets field value
func (o *RecentTeamSessionsRequestParams) SetTopSessions(v float64) {
	o.TopSessions = v
}

// GetProjectId returns the ProjectId field value
func (o *RecentTeamSessionsRequestParams) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *RecentTeamSessionsRequestParams) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *RecentTeamSessionsRequestParams) SetProjectId(v string) {
	o.ProjectId = v
}

func (o RecentTeamSessionsRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecentTeamSessionsRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["topSessions"] = o.TopSessions
	toSerialize["projectId"] = o.ProjectId
	return toSerialize, nil
}

type NullableRecentTeamSessionsRequestParams struct {
	value *RecentTeamSessionsRequestParams
	isSet bool
}

func (v NullableRecentTeamSessionsRequestParams) Get() *RecentTeamSessionsRequestParams {
	return v.value
}

func (v *NullableRecentTeamSessionsRequestParams) Set(val *RecentTeamSessionsRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRecentTeamSessionsRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRecentTeamSessionsRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecentTeamSessionsRequestParams(val *RecentTeamSessionsRequestParams) *NullableRecentTeamSessionsRequestParams {
	return &NullableRecentTeamSessionsRequestParams{value: val, isSet: true}
}

func (v NullableRecentTeamSessionsRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecentTeamSessionsRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
