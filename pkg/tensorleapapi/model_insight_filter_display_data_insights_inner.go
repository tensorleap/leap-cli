/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.638
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the InsightFilterDisplayDataInsightsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InsightFilterDisplayDataInsightsInner{}

// InsightFilterDisplayDataInsightsInner struct for InsightFilterDisplayDataInsightsInner
type InsightFilterDisplayDataInsightsInner struct {
	InsightType InsightType      `json:"insightType"`
	SessionRun  FilterSessionRun `json:"sessionRun"`
}

// NewInsightFilterDisplayDataInsightsInner instantiates a new InsightFilterDisplayDataInsightsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInsightFilterDisplayDataInsightsInner(insightType InsightType, sessionRun FilterSessionRun) *InsightFilterDisplayDataInsightsInner {
	this := InsightFilterDisplayDataInsightsInner{}
	this.InsightType = insightType
	this.SessionRun = sessionRun
	return &this
}

// NewInsightFilterDisplayDataInsightsInnerWithDefaults instantiates a new InsightFilterDisplayDataInsightsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInsightFilterDisplayDataInsightsInnerWithDefaults() *InsightFilterDisplayDataInsightsInner {
	this := InsightFilterDisplayDataInsightsInner{}
	return &this
}

// GetInsightType returns the InsightType field value
func (o *InsightFilterDisplayDataInsightsInner) GetInsightType() InsightType {
	if o == nil {
		var ret InsightType
		return ret
	}

	return o.InsightType
}

// GetInsightTypeOk returns a tuple with the InsightType field value
// and a boolean to check if the value has been set.
func (o *InsightFilterDisplayDataInsightsInner) GetInsightTypeOk() (*InsightType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InsightType, true
}

// SetInsightType sets field value
func (o *InsightFilterDisplayDataInsightsInner) SetInsightType(v InsightType) {
	o.InsightType = v
}

// GetSessionRun returns the SessionRun field value
func (o *InsightFilterDisplayDataInsightsInner) GetSessionRun() FilterSessionRun {
	if o == nil {
		var ret FilterSessionRun
		return ret
	}

	return o.SessionRun
}

// GetSessionRunOk returns a tuple with the SessionRun field value
// and a boolean to check if the value has been set.
func (o *InsightFilterDisplayDataInsightsInner) GetSessionRunOk() (*FilterSessionRun, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionRun, true
}

// SetSessionRun sets field value
func (o *InsightFilterDisplayDataInsightsInner) SetSessionRun(v FilterSessionRun) {
	o.SessionRun = v
}

func (o InsightFilterDisplayDataInsightsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InsightFilterDisplayDataInsightsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["insightType"] = o.InsightType
	toSerialize["sessionRun"] = o.SessionRun
	return toSerialize, nil
}

type NullableInsightFilterDisplayDataInsightsInner struct {
	value *InsightFilterDisplayDataInsightsInner
	isSet bool
}

func (v NullableInsightFilterDisplayDataInsightsInner) Get() *InsightFilterDisplayDataInsightsInner {
	return v.value
}

func (v *NullableInsightFilterDisplayDataInsightsInner) Set(val *InsightFilterDisplayDataInsightsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableInsightFilterDisplayDataInsightsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableInsightFilterDisplayDataInsightsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInsightFilterDisplayDataInsightsInner(val *InsightFilterDisplayDataInsightsInner) *NullableInsightFilterDisplayDataInsightsInner {
	return &NullableInsightFilterDisplayDataInsightsInner{value: val, isSet: true}
}

func (v NullableInsightFilterDisplayDataInsightsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInsightFilterDisplayDataInsightsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
