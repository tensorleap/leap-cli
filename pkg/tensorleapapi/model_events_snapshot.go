/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.638
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the EventsSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventsSnapshot{}

// EventsSnapshot struct for EventsSnapshot
type EventsSnapshot struct {
	Events        []JobEvent `json:"events"`
	SnapshotIndex float64    `json:"snapshotIndex"`
}

// NewEventsSnapshot instantiates a new EventsSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventsSnapshot(events []JobEvent, snapshotIndex float64) *EventsSnapshot {
	this := EventsSnapshot{}
	this.Events = events
	this.SnapshotIndex = snapshotIndex
	return &this
}

// NewEventsSnapshotWithDefaults instantiates a new EventsSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventsSnapshotWithDefaults() *EventsSnapshot {
	this := EventsSnapshot{}
	return &this
}

// GetEvents returns the Events field value
func (o *EventsSnapshot) GetEvents() []JobEvent {
	if o == nil {
		var ret []JobEvent
		return ret
	}

	return o.Events
}

// GetEventsOk returns a tuple with the Events field value
// and a boolean to check if the value has been set.
func (o *EventsSnapshot) GetEventsOk() ([]JobEvent, bool) {
	if o == nil {
		return nil, false
	}
	return o.Events, true
}

// SetEvents sets field value
func (o *EventsSnapshot) SetEvents(v []JobEvent) {
	o.Events = v
}

// GetSnapshotIndex returns the SnapshotIndex field value
func (o *EventsSnapshot) GetSnapshotIndex() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.SnapshotIndex
}

// GetSnapshotIndexOk returns a tuple with the SnapshotIndex field value
// and a boolean to check if the value has been set.
func (o *EventsSnapshot) GetSnapshotIndexOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SnapshotIndex, true
}

// SetSnapshotIndex sets field value
func (o *EventsSnapshot) SetSnapshotIndex(v float64) {
	o.SnapshotIndex = v
}

func (o EventsSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventsSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["events"] = o.Events
	toSerialize["snapshotIndex"] = o.SnapshotIndex
	return toSerialize, nil
}

type NullableEventsSnapshot struct {
	value *EventsSnapshot
	isSet bool
}

func (v NullableEventsSnapshot) Get() *EventsSnapshot {
	return v.value
}

func (v *NullableEventsSnapshot) Set(val *EventsSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableEventsSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableEventsSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventsSnapshot(val *EventsSnapshot) *NullableEventsSnapshot {
	return &NullableEventsSnapshot{value: val, isSet: true}
}

func (v NullableEventsSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventsSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
