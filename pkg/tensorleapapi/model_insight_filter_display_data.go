/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.638
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the InsightFilterDisplayData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InsightFilterDisplayData{}

// InsightFilterDisplayData struct for InsightFilterDisplayData
type InsightFilterDisplayData struct {
	Type     string                                  `json:"type"`
	Insights []InsightFilterDisplayDataInsightsInner `json:"insights"`
}

// NewInsightFilterDisplayData instantiates a new InsightFilterDisplayData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInsightFilterDisplayData(type_ string, insights []InsightFilterDisplayDataInsightsInner) *InsightFilterDisplayData {
	this := InsightFilterDisplayData{}
	this.Type = type_
	this.Insights = insights
	return &this
}

// NewInsightFilterDisplayDataWithDefaults instantiates a new InsightFilterDisplayData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInsightFilterDisplayDataWithDefaults() *InsightFilterDisplayData {
	this := InsightFilterDisplayData{}
	return &this
}

// GetType returns the Type field value
func (o *InsightFilterDisplayData) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *InsightFilterDisplayData) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *InsightFilterDisplayData) SetType(v string) {
	o.Type = v
}

// GetInsights returns the Insights field value
func (o *InsightFilterDisplayData) GetInsights() []InsightFilterDisplayDataInsightsInner {
	if o == nil {
		var ret []InsightFilterDisplayDataInsightsInner
		return ret
	}

	return o.Insights
}

// GetInsightsOk returns a tuple with the Insights field value
// and a boolean to check if the value has been set.
func (o *InsightFilterDisplayData) GetInsightsOk() ([]InsightFilterDisplayDataInsightsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Insights, true
}

// SetInsights sets field value
func (o *InsightFilterDisplayData) SetInsights(v []InsightFilterDisplayDataInsightsInner) {
	o.Insights = v
}

func (o InsightFilterDisplayData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InsightFilterDisplayData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["insights"] = o.Insights
	return toSerialize, nil
}

type NullableInsightFilterDisplayData struct {
	value *InsightFilterDisplayData
	isSet bool
}

func (v NullableInsightFilterDisplayData) Get() *InsightFilterDisplayData {
	return v.value
}

func (v *NullableInsightFilterDisplayData) Set(val *InsightFilterDisplayData) {
	v.value = val
	v.isSet = true
}

func (v NullableInsightFilterDisplayData) IsSet() bool {
	return v.isSet
}

func (v *NullableInsightFilterDisplayData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInsightFilterDisplayData(val *InsightFilterDisplayData) *NullableInsightFilterDisplayData {
	return &NullableInsightFilterDisplayData{value: val, isSet: true}
}

func (v NullableInsightFilterDisplayData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInsightFilterDisplayData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
