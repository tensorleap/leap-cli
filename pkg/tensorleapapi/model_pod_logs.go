/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.634
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the PodLogs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PodLogs{}

// PodLogs struct for PodLogs
type PodLogs struct {
	Name string `json:"name"`
	Logs string `json:"logs"`
}

// NewPodLogs instantiates a new PodLogs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPodLogs(name string, logs string) *PodLogs {
	this := PodLogs{}
	this.Name = name
	this.Logs = logs
	return &this
}

// NewPodLogsWithDefaults instantiates a new PodLogs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPodLogsWithDefaults() *PodLogs {
	this := PodLogs{}
	return &this
}

// GetName returns the Name field value
func (o *PodLogs) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PodLogs) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PodLogs) SetName(v string) {
	o.Name = v
}

// GetLogs returns the Logs field value
func (o *PodLogs) GetLogs() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Logs
}

// GetLogsOk returns a tuple with the Logs field value
// and a boolean to check if the value has been set.
func (o *PodLogs) GetLogsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Logs, true
}

// SetLogs sets field value
func (o *PodLogs) SetLogs(v string) {
	o.Logs = v
}

func (o PodLogs) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PodLogs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["logs"] = o.Logs
	return toSerialize, nil
}

type NullablePodLogs struct {
	value *PodLogs
	isSet bool
}

func (v NullablePodLogs) Get() *PodLogs {
	return v.value
}

func (v *NullablePodLogs) Set(val *PodLogs) {
	v.value = val
	v.isSet = true
}

func (v NullablePodLogs) IsSet() bool {
	return v.isSet
}

func (v *NullablePodLogs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePodLogs(val *PodLogs) *NullablePodLogs {
	return &NullablePodLogs{value: val, isSet: true}
}

func (v NullablePodLogs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePodLogs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
