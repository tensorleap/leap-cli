/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.628
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the PredictionLabels type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PredictionLabels{}

// PredictionLabels struct for PredictionLabels
type PredictionLabels struct {
	PredictionName string   `json:"predictionName"`
	Labels         []string `json:"labels"`
}

// NewPredictionLabels instantiates a new PredictionLabels object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPredictionLabels(predictionName string, labels []string) *PredictionLabels {
	this := PredictionLabels{}
	this.PredictionName = predictionName
	this.Labels = labels
	return &this
}

// NewPredictionLabelsWithDefaults instantiates a new PredictionLabels object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPredictionLabelsWithDefaults() *PredictionLabels {
	this := PredictionLabels{}
	return &this
}

// GetPredictionName returns the PredictionName field value
func (o *PredictionLabels) GetPredictionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PredictionName
}

// GetPredictionNameOk returns a tuple with the PredictionName field value
// and a boolean to check if the value has been set.
func (o *PredictionLabels) GetPredictionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PredictionName, true
}

// SetPredictionName sets field value
func (o *PredictionLabels) SetPredictionName(v string) {
	o.PredictionName = v
}

// GetLabels returns the Labels field value
func (o *PredictionLabels) GetLabels() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *PredictionLabels) GetLabelsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *PredictionLabels) SetLabels(v []string) {
	o.Labels = v
}

func (o PredictionLabels) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PredictionLabels) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["predictionName"] = o.PredictionName
	toSerialize["labels"] = o.Labels
	return toSerialize, nil
}

type NullablePredictionLabels struct {
	value *PredictionLabels
	isSet bool
}

func (v NullablePredictionLabels) Get() *PredictionLabels {
	return v.value
}

func (v *NullablePredictionLabels) Set(val *PredictionLabels) {
	v.value = val
	v.isSet = true
}

func (v NullablePredictionLabels) IsSet() bool {
	return v.isSet
}

func (v *NullablePredictionLabels) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePredictionLabels(val *PredictionLabels) *NullablePredictionLabels {
	return &NullablePredictionLabels{value: val, isSet: true}
}

func (v NullablePredictionLabels) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePredictionLabels) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
