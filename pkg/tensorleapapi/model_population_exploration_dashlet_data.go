/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.607
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the PopulationExplorationDashletData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PopulationExplorationDashletData{}

// PopulationExplorationDashletData struct for PopulationExplorationDashletData
type PopulationExplorationDashletData struct {
	// Construct a type with a set of properties K of type T
	Data map[string]interface{} `json:"data"`
	Type string                 `json:"type"`
	Name string                 `json:"name"`
}

// NewPopulationExplorationDashletData instantiates a new PopulationExplorationDashletData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPopulationExplorationDashletData(data map[string]interface{}, type_ string, name string) *PopulationExplorationDashletData {
	this := PopulationExplorationDashletData{}
	this.Data = data
	this.Type = type_
	this.Name = name
	return &this
}

// NewPopulationExplorationDashletDataWithDefaults instantiates a new PopulationExplorationDashletData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPopulationExplorationDashletDataWithDefaults() *PopulationExplorationDashletData {
	this := PopulationExplorationDashletData{}
	return &this
}

// GetData returns the Data field value
func (o *PopulationExplorationDashletData) GetData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *PopulationExplorationDashletData) GetDataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *PopulationExplorationDashletData) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetType returns the Type field value
func (o *PopulationExplorationDashletData) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PopulationExplorationDashletData) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PopulationExplorationDashletData) SetType(v string) {
	o.Type = v
}

// GetName returns the Name field value
func (o *PopulationExplorationDashletData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PopulationExplorationDashletData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PopulationExplorationDashletData) SetName(v string) {
	o.Name = v
}

func (o PopulationExplorationDashletData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PopulationExplorationDashletData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["type"] = o.Type
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullablePopulationExplorationDashletData struct {
	value *PopulationExplorationDashletData
	isSet bool
}

func (v NullablePopulationExplorationDashletData) Get() *PopulationExplorationDashletData {
	return v.value
}

func (v *NullablePopulationExplorationDashletData) Set(val *PopulationExplorationDashletData) {
	v.value = val
	v.isSet = true
}

func (v NullablePopulationExplorationDashletData) IsSet() bool {
	return v.isSet
}

func (v *NullablePopulationExplorationDashletData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePopulationExplorationDashletData(val *PopulationExplorationDashletData) *NullablePopulationExplorationDashletData {
	return &NullablePopulationExplorationDashletData{value: val, isSet: true}
}

func (v NullablePopulationExplorationDashletData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePopulationExplorationDashletData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
