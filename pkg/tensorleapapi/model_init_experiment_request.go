/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.607
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the InitExperimentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InitExperimentRequest{}

// InitExperimentRequest struct for InitExperimentRequest
type InitExperimentRequest struct {
	ProjectId                    *string `json:"projectId,omitempty"`
	ProjectName                  *string `json:"projectName,omitempty"`
	CodeIntegrationName          *string `json:"codeIntegrationName,omitempty"`
	ExperimentName               string  `json:"experimentName"`
	RemoveUntaggedUploadedModels *bool   `json:"removeUntaggedUploadedModels,omitempty"`
	CodeIntegrationId            *string `json:"codeIntegrationId,omitempty"`
	CodeIntegrationBranch        *string `json:"codeIntegrationBranch,omitempty"`
}

// NewInitExperimentRequest instantiates a new InitExperimentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitExperimentRequest(experimentName string) *InitExperimentRequest {
	this := InitExperimentRequest{}
	this.ExperimentName = experimentName
	return &this
}

// NewInitExperimentRequestWithDefaults instantiates a new InitExperimentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitExperimentRequestWithDefaults() *InitExperimentRequest {
	this := InitExperimentRequest{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *InitExperimentRequest) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitExperimentRequest) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *InitExperimentRequest) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *InitExperimentRequest) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *InitExperimentRequest) GetProjectName() string {
	if o == nil || IsNil(o.ProjectName) {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitExperimentRequest) GetProjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectName) {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *InitExperimentRequest) HasProjectName() bool {
	if o != nil && !IsNil(o.ProjectName) {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *InitExperimentRequest) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetCodeIntegrationName returns the CodeIntegrationName field value if set, zero value otherwise.
func (o *InitExperimentRequest) GetCodeIntegrationName() string {
	if o == nil || IsNil(o.CodeIntegrationName) {
		var ret string
		return ret
	}
	return *o.CodeIntegrationName
}

// GetCodeIntegrationNameOk returns a tuple with the CodeIntegrationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitExperimentRequest) GetCodeIntegrationNameOk() (*string, bool) {
	if o == nil || IsNil(o.CodeIntegrationName) {
		return nil, false
	}
	return o.CodeIntegrationName, true
}

// HasCodeIntegrationName returns a boolean if a field has been set.
func (o *InitExperimentRequest) HasCodeIntegrationName() bool {
	if o != nil && !IsNil(o.CodeIntegrationName) {
		return true
	}

	return false
}

// SetCodeIntegrationName gets a reference to the given string and assigns it to the CodeIntegrationName field.
func (o *InitExperimentRequest) SetCodeIntegrationName(v string) {
	o.CodeIntegrationName = &v
}

// GetExperimentName returns the ExperimentName field value
func (o *InitExperimentRequest) GetExperimentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExperimentName
}

// GetExperimentNameOk returns a tuple with the ExperimentName field value
// and a boolean to check if the value has been set.
func (o *InitExperimentRequest) GetExperimentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExperimentName, true
}

// SetExperimentName sets field value
func (o *InitExperimentRequest) SetExperimentName(v string) {
	o.ExperimentName = v
}

// GetRemoveUntaggedUploadedModels returns the RemoveUntaggedUploadedModels field value if set, zero value otherwise.
func (o *InitExperimentRequest) GetRemoveUntaggedUploadedModels() bool {
	if o == nil || IsNil(o.RemoveUntaggedUploadedModels) {
		var ret bool
		return ret
	}
	return *o.RemoveUntaggedUploadedModels
}

// GetRemoveUntaggedUploadedModelsOk returns a tuple with the RemoveUntaggedUploadedModels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitExperimentRequest) GetRemoveUntaggedUploadedModelsOk() (*bool, bool) {
	if o == nil || IsNil(o.RemoveUntaggedUploadedModels) {
		return nil, false
	}
	return o.RemoveUntaggedUploadedModels, true
}

// HasRemoveUntaggedUploadedModels returns a boolean if a field has been set.
func (o *InitExperimentRequest) HasRemoveUntaggedUploadedModels() bool {
	if o != nil && !IsNil(o.RemoveUntaggedUploadedModels) {
		return true
	}

	return false
}

// SetRemoveUntaggedUploadedModels gets a reference to the given bool and assigns it to the RemoveUntaggedUploadedModels field.
func (o *InitExperimentRequest) SetRemoveUntaggedUploadedModels(v bool) {
	o.RemoveUntaggedUploadedModels = &v
}

// GetCodeIntegrationId returns the CodeIntegrationId field value if set, zero value otherwise.
func (o *InitExperimentRequest) GetCodeIntegrationId() string {
	if o == nil || IsNil(o.CodeIntegrationId) {
		var ret string
		return ret
	}
	return *o.CodeIntegrationId
}

// GetCodeIntegrationIdOk returns a tuple with the CodeIntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitExperimentRequest) GetCodeIntegrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CodeIntegrationId) {
		return nil, false
	}
	return o.CodeIntegrationId, true
}

// HasCodeIntegrationId returns a boolean if a field has been set.
func (o *InitExperimentRequest) HasCodeIntegrationId() bool {
	if o != nil && !IsNil(o.CodeIntegrationId) {
		return true
	}

	return false
}

// SetCodeIntegrationId gets a reference to the given string and assigns it to the CodeIntegrationId field.
func (o *InitExperimentRequest) SetCodeIntegrationId(v string) {
	o.CodeIntegrationId = &v
}

// GetCodeIntegrationBranch returns the CodeIntegrationBranch field value if set, zero value otherwise.
func (o *InitExperimentRequest) GetCodeIntegrationBranch() string {
	if o == nil || IsNil(o.CodeIntegrationBranch) {
		var ret string
		return ret
	}
	return *o.CodeIntegrationBranch
}

// GetCodeIntegrationBranchOk returns a tuple with the CodeIntegrationBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitExperimentRequest) GetCodeIntegrationBranchOk() (*string, bool) {
	if o == nil || IsNil(o.CodeIntegrationBranch) {
		return nil, false
	}
	return o.CodeIntegrationBranch, true
}

// HasCodeIntegrationBranch returns a boolean if a field has been set.
func (o *InitExperimentRequest) HasCodeIntegrationBranch() bool {
	if o != nil && !IsNil(o.CodeIntegrationBranch) {
		return true
	}

	return false
}

// SetCodeIntegrationBranch gets a reference to the given string and assigns it to the CodeIntegrationBranch field.
func (o *InitExperimentRequest) SetCodeIntegrationBranch(v string) {
	o.CodeIntegrationBranch = &v
}

func (o InitExperimentRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InitExperimentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.ProjectName) {
		toSerialize["projectName"] = o.ProjectName
	}
	if !IsNil(o.CodeIntegrationName) {
		toSerialize["codeIntegrationName"] = o.CodeIntegrationName
	}
	toSerialize["experimentName"] = o.ExperimentName
	if !IsNil(o.RemoveUntaggedUploadedModels) {
		toSerialize["removeUntaggedUploadedModels"] = o.RemoveUntaggedUploadedModels
	}
	if !IsNil(o.CodeIntegrationId) {
		toSerialize["codeIntegrationId"] = o.CodeIntegrationId
	}
	if !IsNil(o.CodeIntegrationBranch) {
		toSerialize["codeIntegrationBranch"] = o.CodeIntegrationBranch
	}
	return toSerialize, nil
}

type NullableInitExperimentRequest struct {
	value *InitExperimentRequest
	isSet bool
}

func (v NullableInitExperimentRequest) Get() *InitExperimentRequest {
	return v.value
}

func (v *NullableInitExperimentRequest) Set(val *InitExperimentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInitExperimentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInitExperimentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitExperimentRequest(val *InitExperimentRequest) *NullableInitExperimentRequest {
	return &NullableInitExperimentRequest{value: val, isSet: true}
}

func (v NullableInitExperimentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitExperimentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
