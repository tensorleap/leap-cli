/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.467
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the ClearStorageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClearStorageRequest{}

// ClearStorageRequest struct for ClearStorageRequest
type ClearStorageRequest struct {
	DryRun *bool `json:"dryRun,omitempty"`
}

// NewClearStorageRequest instantiates a new ClearStorageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClearStorageRequest() *ClearStorageRequest {
	this := ClearStorageRequest{}
	return &this
}

// NewClearStorageRequestWithDefaults instantiates a new ClearStorageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClearStorageRequestWithDefaults() *ClearStorageRequest {
	this := ClearStorageRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ClearStorageRequest) GetDryRun() bool {
	if o == nil || IsNil(o.DryRun) {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClearStorageRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || IsNil(o.DryRun) {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ClearStorageRequest) HasDryRun() bool {
	if o != nil && !IsNil(o.DryRun) {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ClearStorageRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o ClearStorageRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClearStorageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DryRun) {
		toSerialize["dryRun"] = o.DryRun
	}
	return toSerialize, nil
}

type NullableClearStorageRequest struct {
	value *ClearStorageRequest
	isSet bool
}

func (v NullableClearStorageRequest) Get() *ClearStorageRequest {
	return v.value
}

func (v *NullableClearStorageRequest) Set(val *ClearStorageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClearStorageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClearStorageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClearStorageRequest(val *ClearStorageRequest) *NullableClearStorageRequest {
	return &NullableClearStorageRequest{value: val, isSet: true}
}

func (v NullableClearStorageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClearStorageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
