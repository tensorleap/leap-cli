/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.618
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the ContinueEvaluateParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContinueEvaluateParams{}

// ContinueEvaluateParams struct for ContinueEvaluateParams
type ContinueEvaluateParams struct {
	JobId     string `json:"jobId"`
	ProjectId string `json:"projectId"`
}

// NewContinueEvaluateParams instantiates a new ContinueEvaluateParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContinueEvaluateParams(jobId string, projectId string) *ContinueEvaluateParams {
	this := ContinueEvaluateParams{}
	this.JobId = jobId
	this.ProjectId = projectId
	return &this
}

// NewContinueEvaluateParamsWithDefaults instantiates a new ContinueEvaluateParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContinueEvaluateParamsWithDefaults() *ContinueEvaluateParams {
	this := ContinueEvaluateParams{}
	return &this
}

// GetJobId returns the JobId field value
func (o *ContinueEvaluateParams) GetJobId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value
// and a boolean to check if the value has been set.
func (o *ContinueEvaluateParams) GetJobIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobId, true
}

// SetJobId sets field value
func (o *ContinueEvaluateParams) SetJobId(v string) {
	o.JobId = v
}

// GetProjectId returns the ProjectId field value
func (o *ContinueEvaluateParams) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ContinueEvaluateParams) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *ContinueEvaluateParams) SetProjectId(v string) {
	o.ProjectId = v
}

func (o ContinueEvaluateParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContinueEvaluateParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["jobId"] = o.JobId
	toSerialize["projectId"] = o.ProjectId
	return toSerialize, nil
}

type NullableContinueEvaluateParams struct {
	value *ContinueEvaluateParams
	isSet bool
}

func (v NullableContinueEvaluateParams) Get() *ContinueEvaluateParams {
	return v.value
}

func (v *NullableContinueEvaluateParams) Set(val *ContinueEvaluateParams) {
	v.value = val
	v.isSet = true
}

func (v NullableContinueEvaluateParams) IsSet() bool {
	return v.isSet
}

func (v *NullableContinueEvaluateParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContinueEvaluateParams(val *ContinueEvaluateParams) *NullableContinueEvaluateParams {
	return &NullableContinueEvaluateParams{value: val, isSet: true}
}

func (v NullableContinueEvaluateParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContinueEvaluateParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
