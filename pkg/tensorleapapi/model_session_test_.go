/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.526
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
	"time"
)

// checks if the SessionTest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionTest{}

// SessionTest struct for SessionTest
type SessionTest struct {
	Cid           string             `json:"cid"`
	ProjectId     string             `json:"projectId"`
	TeamId        string             `json:"teamId"`
	Name          string             `json:"name"`
	CreatedAt     time.Time          `json:"createdAt"`
	UpdatedAt     time.Time          `json:"updatedAt"`
	CreatedBy     string             `json:"createdBy"`
	TestFilter    ClientFilterParams `json:"testFilter"`
	DatasetFilter []ESFilter         `json:"datasetFilter"`
}

// NewSessionTest instantiates a new SessionTest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionTest(cid string, projectId string, teamId string, name string, createdAt time.Time, updatedAt time.Time, createdBy string, testFilter ClientFilterParams, datasetFilter []ESFilter) *SessionTest {
	this := SessionTest{}
	this.Cid = cid
	this.ProjectId = projectId
	this.TeamId = teamId
	this.Name = name
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.CreatedBy = createdBy
	this.TestFilter = testFilter
	this.DatasetFilter = datasetFilter
	return &this
}

// NewSessionTestWithDefaults instantiates a new SessionTest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionTestWithDefaults() *SessionTest {
	this := SessionTest{}
	return &this
}

// GetCid returns the Cid field value
func (o *SessionTest) GetCid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cid
}

// GetCidOk returns a tuple with the Cid field value
// and a boolean to check if the value has been set.
func (o *SessionTest) GetCidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cid, true
}

// SetCid sets field value
func (o *SessionTest) SetCid(v string) {
	o.Cid = v
}

// GetProjectId returns the ProjectId field value
func (o *SessionTest) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *SessionTest) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *SessionTest) SetProjectId(v string) {
	o.ProjectId = v
}

// GetTeamId returns the TeamId field value
func (o *SessionTest) GetTeamId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value
// and a boolean to check if the value has been set.
func (o *SessionTest) GetTeamIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamId, true
}

// SetTeamId sets field value
func (o *SessionTest) SetTeamId(v string) {
	o.TeamId = v
}

// GetName returns the Name field value
func (o *SessionTest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SessionTest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SessionTest) SetName(v string) {
	o.Name = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SessionTest) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SessionTest) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SessionTest) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *SessionTest) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *SessionTest) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *SessionTest) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *SessionTest) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *SessionTest) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *SessionTest) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetTestFilter returns the TestFilter field value
func (o *SessionTest) GetTestFilter() ClientFilterParams {
	if o == nil {
		var ret ClientFilterParams
		return ret
	}

	return o.TestFilter
}

// GetTestFilterOk returns a tuple with the TestFilter field value
// and a boolean to check if the value has been set.
func (o *SessionTest) GetTestFilterOk() (*ClientFilterParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TestFilter, true
}

// SetTestFilter sets field value
func (o *SessionTest) SetTestFilter(v ClientFilterParams) {
	o.TestFilter = v
}

// GetDatasetFilter returns the DatasetFilter field value
func (o *SessionTest) GetDatasetFilter() []ESFilter {
	if o == nil {
		var ret []ESFilter
		return ret
	}

	return o.DatasetFilter
}

// GetDatasetFilterOk returns a tuple with the DatasetFilter field value
// and a boolean to check if the value has been set.
func (o *SessionTest) GetDatasetFilterOk() ([]ESFilter, bool) {
	if o == nil {
		return nil, false
	}
	return o.DatasetFilter, true
}

// SetDatasetFilter sets field value
func (o *SessionTest) SetDatasetFilter(v []ESFilter) {
	o.DatasetFilter = v
}

func (o SessionTest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionTest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cid"] = o.Cid
	toSerialize["projectId"] = o.ProjectId
	toSerialize["teamId"] = o.TeamId
	toSerialize["name"] = o.Name
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["testFilter"] = o.TestFilter
	toSerialize["datasetFilter"] = o.DatasetFilter
	return toSerialize, nil
}

type NullableSessionTest struct {
	value *SessionTest
	isSet bool
}

func (v NullableSessionTest) Get() *SessionTest {
	return v.value
}

func (v *NullableSessionTest) Set(val *SessionTest) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionTest) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionTest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionTest(val *SessionTest) *NullableSessionTest {
	return &NullableSessionTest{value: val, isSet: true}
}

func (v NullableSessionTest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionTest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
