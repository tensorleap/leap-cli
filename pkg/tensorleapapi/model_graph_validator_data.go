/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.417
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the GraphValidatorData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphValidatorData{}

// GraphValidatorData struct for GraphValidatorData
type GraphValidatorData struct {
	Inputs          []ValidatedNode     `json:"inputs"`
	Metadata        []ValidatedNode     `json:"metadata"`
	GroundTruths    []ValidatedNode     `json:"ground_truths"`
	PredictionTypes []ValidatedNode     `json:"prediction_types"`
	Visualizers     []ValidatedNode     `json:"visualizers"`
	Losses          []ValidatedLossNode `json:"losses"`
	Metrics         []ValidatedNode     `json:"metrics"`
	GeneralError    *string             `json:"general_error,omitempty"`
}

// NewGraphValidatorData instantiates a new GraphValidatorData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphValidatorData(inputs []ValidatedNode, metadata []ValidatedNode, groundTruths []ValidatedNode, predictionTypes []ValidatedNode, visualizers []ValidatedNode, losses []ValidatedLossNode, metrics []ValidatedNode) *GraphValidatorData {
	this := GraphValidatorData{}
	this.Inputs = inputs
	this.Metadata = metadata
	this.GroundTruths = groundTruths
	this.PredictionTypes = predictionTypes
	this.Visualizers = visualizers
	this.Losses = losses
	this.Metrics = metrics
	return &this
}

// NewGraphValidatorDataWithDefaults instantiates a new GraphValidatorData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphValidatorDataWithDefaults() *GraphValidatorData {
	this := GraphValidatorData{}
	return &this
}

// GetInputs returns the Inputs field value
func (o *GraphValidatorData) GetInputs() []ValidatedNode {
	if o == nil {
		var ret []ValidatedNode
		return ret
	}

	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value
// and a boolean to check if the value has been set.
func (o *GraphValidatorData) GetInputsOk() ([]ValidatedNode, bool) {
	if o == nil {
		return nil, false
	}
	return o.Inputs, true
}

// SetInputs sets field value
func (o *GraphValidatorData) SetInputs(v []ValidatedNode) {
	o.Inputs = v
}

// GetMetadata returns the Metadata field value
func (o *GraphValidatorData) GetMetadata() []ValidatedNode {
	if o == nil {
		var ret []ValidatedNode
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *GraphValidatorData) GetMetadataOk() ([]ValidatedNode, bool) {
	if o == nil {
		return nil, false
	}
	return o.Metadata, true
}

// SetMetadata sets field value
func (o *GraphValidatorData) SetMetadata(v []ValidatedNode) {
	o.Metadata = v
}

// GetGroundTruths returns the GroundTruths field value
func (o *GraphValidatorData) GetGroundTruths() []ValidatedNode {
	if o == nil {
		var ret []ValidatedNode
		return ret
	}

	return o.GroundTruths
}

// GetGroundTruthsOk returns a tuple with the GroundTruths field value
// and a boolean to check if the value has been set.
func (o *GraphValidatorData) GetGroundTruthsOk() ([]ValidatedNode, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroundTruths, true
}

// SetGroundTruths sets field value
func (o *GraphValidatorData) SetGroundTruths(v []ValidatedNode) {
	o.GroundTruths = v
}

// GetPredictionTypes returns the PredictionTypes field value
func (o *GraphValidatorData) GetPredictionTypes() []ValidatedNode {
	if o == nil {
		var ret []ValidatedNode
		return ret
	}

	return o.PredictionTypes
}

// GetPredictionTypesOk returns a tuple with the PredictionTypes field value
// and a boolean to check if the value has been set.
func (o *GraphValidatorData) GetPredictionTypesOk() ([]ValidatedNode, bool) {
	if o == nil {
		return nil, false
	}
	return o.PredictionTypes, true
}

// SetPredictionTypes sets field value
func (o *GraphValidatorData) SetPredictionTypes(v []ValidatedNode) {
	o.PredictionTypes = v
}

// GetVisualizers returns the Visualizers field value
func (o *GraphValidatorData) GetVisualizers() []ValidatedNode {
	if o == nil {
		var ret []ValidatedNode
		return ret
	}

	return o.Visualizers
}

// GetVisualizersOk returns a tuple with the Visualizers field value
// and a boolean to check if the value has been set.
func (o *GraphValidatorData) GetVisualizersOk() ([]ValidatedNode, bool) {
	if o == nil {
		return nil, false
	}
	return o.Visualizers, true
}

// SetVisualizers sets field value
func (o *GraphValidatorData) SetVisualizers(v []ValidatedNode) {
	o.Visualizers = v
}

// GetLosses returns the Losses field value
func (o *GraphValidatorData) GetLosses() []ValidatedLossNode {
	if o == nil {
		var ret []ValidatedLossNode
		return ret
	}

	return o.Losses
}

// GetLossesOk returns a tuple with the Losses field value
// and a boolean to check if the value has been set.
func (o *GraphValidatorData) GetLossesOk() ([]ValidatedLossNode, bool) {
	if o == nil {
		return nil, false
	}
	return o.Losses, true
}

// SetLosses sets field value
func (o *GraphValidatorData) SetLosses(v []ValidatedLossNode) {
	o.Losses = v
}

// GetMetrics returns the Metrics field value
func (o *GraphValidatorData) GetMetrics() []ValidatedNode {
	if o == nil {
		var ret []ValidatedNode
		return ret
	}

	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value
// and a boolean to check if the value has been set.
func (o *GraphValidatorData) GetMetricsOk() ([]ValidatedNode, bool) {
	if o == nil {
		return nil, false
	}
	return o.Metrics, true
}

// SetMetrics sets field value
func (o *GraphValidatorData) SetMetrics(v []ValidatedNode) {
	o.Metrics = v
}

// GetGeneralError returns the GeneralError field value if set, zero value otherwise.
func (o *GraphValidatorData) GetGeneralError() string {
	if o == nil || IsNil(o.GeneralError) {
		var ret string
		return ret
	}
	return *o.GeneralError
}

// GetGeneralErrorOk returns a tuple with the GeneralError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphValidatorData) GetGeneralErrorOk() (*string, bool) {
	if o == nil || IsNil(o.GeneralError) {
		return nil, false
	}
	return o.GeneralError, true
}

// HasGeneralError returns a boolean if a field has been set.
func (o *GraphValidatorData) HasGeneralError() bool {
	if o != nil && !IsNil(o.GeneralError) {
		return true
	}

	return false
}

// SetGeneralError gets a reference to the given string and assigns it to the GeneralError field.
func (o *GraphValidatorData) SetGeneralError(v string) {
	o.GeneralError = &v
}

func (o GraphValidatorData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphValidatorData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["inputs"] = o.Inputs
	toSerialize["metadata"] = o.Metadata
	toSerialize["ground_truths"] = o.GroundTruths
	toSerialize["prediction_types"] = o.PredictionTypes
	toSerialize["visualizers"] = o.Visualizers
	toSerialize["losses"] = o.Losses
	toSerialize["metrics"] = o.Metrics
	if !IsNil(o.GeneralError) {
		toSerialize["general_error"] = o.GeneralError
	}
	return toSerialize, nil
}

type NullableGraphValidatorData struct {
	value *GraphValidatorData
	isSet bool
}

func (v NullableGraphValidatorData) Get() *GraphValidatorData {
	return v.value
}

func (v *NullableGraphValidatorData) Set(val *GraphValidatorData) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphValidatorData) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphValidatorData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphValidatorData(val *GraphValidatorData) *NullableGraphValidatorData {
	return &NullableGraphValidatorData{value: val, isSet: true}
}

func (v NullableGraphValidatorData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphValidatorData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
