/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.634
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the UpdateDatasetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDatasetResponse{}

// UpdateDatasetResponse struct for UpdateDatasetResponse
type UpdateDatasetResponse struct {
	Dataset Dataset `json:"dataset"`
}

// NewUpdateDatasetResponse instantiates a new UpdateDatasetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDatasetResponse(dataset Dataset) *UpdateDatasetResponse {
	this := UpdateDatasetResponse{}
	this.Dataset = dataset
	return &this
}

// NewUpdateDatasetResponseWithDefaults instantiates a new UpdateDatasetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDatasetResponseWithDefaults() *UpdateDatasetResponse {
	this := UpdateDatasetResponse{}
	return &this
}

// GetDataset returns the Dataset field value
func (o *UpdateDatasetResponse) GetDataset() Dataset {
	if o == nil {
		var ret Dataset
		return ret
	}

	return o.Dataset
}

// GetDatasetOk returns a tuple with the Dataset field value
// and a boolean to check if the value has been set.
func (o *UpdateDatasetResponse) GetDatasetOk() (*Dataset, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dataset, true
}

// SetDataset sets field value
func (o *UpdateDatasetResponse) SetDataset(v Dataset) {
	o.Dataset = v
}

func (o UpdateDatasetResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDatasetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dataset"] = o.Dataset
	return toSerialize, nil
}

type NullableUpdateDatasetResponse struct {
	value *UpdateDatasetResponse
	isSet bool
}

func (v NullableUpdateDatasetResponse) Get() *UpdateDatasetResponse {
	return v.value
}

func (v *NullableUpdateDatasetResponse) Set(val *UpdateDatasetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDatasetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDatasetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDatasetResponse(val *UpdateDatasetResponse) *NullableUpdateDatasetResponse {
	return &NullableUpdateDatasetResponse{value: val, isSet: true}
}

func (v NullableUpdateDatasetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDatasetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
