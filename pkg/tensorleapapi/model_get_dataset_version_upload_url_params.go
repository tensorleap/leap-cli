/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.456
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the GetDatasetVersionUploadUrlParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDatasetVersionUploadUrlParams{}

// GetDatasetVersionUploadUrlParams struct for GetDatasetVersionUploadUrlParams
type GetDatasetVersionUploadUrlParams struct {
	DatasetId string `json:"datasetId"`
}

// NewGetDatasetVersionUploadUrlParams instantiates a new GetDatasetVersionUploadUrlParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDatasetVersionUploadUrlParams(datasetId string) *GetDatasetVersionUploadUrlParams {
	this := GetDatasetVersionUploadUrlParams{}
	this.DatasetId = datasetId
	return &this
}

// NewGetDatasetVersionUploadUrlParamsWithDefaults instantiates a new GetDatasetVersionUploadUrlParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDatasetVersionUploadUrlParamsWithDefaults() *GetDatasetVersionUploadUrlParams {
	this := GetDatasetVersionUploadUrlParams{}
	return &this
}

// GetDatasetId returns the DatasetId field value
func (o *GetDatasetVersionUploadUrlParams) GetDatasetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field value
// and a boolean to check if the value has been set.
func (o *GetDatasetVersionUploadUrlParams) GetDatasetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatasetId, true
}

// SetDatasetId sets field value
func (o *GetDatasetVersionUploadUrlParams) SetDatasetId(v string) {
	o.DatasetId = v
}

func (o GetDatasetVersionUploadUrlParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDatasetVersionUploadUrlParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["datasetId"] = o.DatasetId
	return toSerialize, nil
}

type NullableGetDatasetVersionUploadUrlParams struct {
	value *GetDatasetVersionUploadUrlParams
	isSet bool
}

func (v NullableGetDatasetVersionUploadUrlParams) Get() *GetDatasetVersionUploadUrlParams {
	return v.value
}

func (v *NullableGetDatasetVersionUploadUrlParams) Set(val *GetDatasetVersionUploadUrlParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDatasetVersionUploadUrlParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDatasetVersionUploadUrlParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDatasetVersionUploadUrlParams(val *GetDatasetVersionUploadUrlParams) *NullableGetDatasetVersionUploadUrlParams {
	return &NullableGetDatasetVersionUploadUrlParams{value: val, isSet: true}
}

func (v NullableGetDatasetVersionUploadUrlParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDatasetVersionUploadUrlParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
