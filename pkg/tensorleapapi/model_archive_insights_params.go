/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.634
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the ArchiveInsightsParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArchiveInsightsParams{}

// ArchiveInsightsParams struct for ArchiveInsightsParams
type ArchiveInsightsParams struct {
	PopExpDigest   string    `json:"popExpDigest"`
	InsightIndexes []float64 `json:"insightIndexes"`
	ProjectId      string    `json:"projectId"`
}

// NewArchiveInsightsParams instantiates a new ArchiveInsightsParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArchiveInsightsParams(popExpDigest string, insightIndexes []float64, projectId string) *ArchiveInsightsParams {
	this := ArchiveInsightsParams{}
	this.PopExpDigest = popExpDigest
	this.InsightIndexes = insightIndexes
	this.ProjectId = projectId
	return &this
}

// NewArchiveInsightsParamsWithDefaults instantiates a new ArchiveInsightsParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArchiveInsightsParamsWithDefaults() *ArchiveInsightsParams {
	this := ArchiveInsightsParams{}
	return &this
}

// GetPopExpDigest returns the PopExpDigest field value
func (o *ArchiveInsightsParams) GetPopExpDigest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PopExpDigest
}

// GetPopExpDigestOk returns a tuple with the PopExpDigest field value
// and a boolean to check if the value has been set.
func (o *ArchiveInsightsParams) GetPopExpDigestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PopExpDigest, true
}

// SetPopExpDigest sets field value
func (o *ArchiveInsightsParams) SetPopExpDigest(v string) {
	o.PopExpDigest = v
}

// GetInsightIndexes returns the InsightIndexes field value
func (o *ArchiveInsightsParams) GetInsightIndexes() []float64 {
	if o == nil {
		var ret []float64
		return ret
	}

	return o.InsightIndexes
}

// GetInsightIndexesOk returns a tuple with the InsightIndexes field value
// and a boolean to check if the value has been set.
func (o *ArchiveInsightsParams) GetInsightIndexesOk() ([]float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.InsightIndexes, true
}

// SetInsightIndexes sets field value
func (o *ArchiveInsightsParams) SetInsightIndexes(v []float64) {
	o.InsightIndexes = v
}

// GetProjectId returns the ProjectId field value
func (o *ArchiveInsightsParams) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ArchiveInsightsParams) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *ArchiveInsightsParams) SetProjectId(v string) {
	o.ProjectId = v
}

func (o ArchiveInsightsParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArchiveInsightsParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["popExpDigest"] = o.PopExpDigest
	toSerialize["insightIndexes"] = o.InsightIndexes
	toSerialize["projectId"] = o.ProjectId
	return toSerialize, nil
}

type NullableArchiveInsightsParams struct {
	value *ArchiveInsightsParams
	isSet bool
}

func (v NullableArchiveInsightsParams) Get() *ArchiveInsightsParams {
	return v.value
}

func (v *NullableArchiveInsightsParams) Set(val *ArchiveInsightsParams) {
	v.value = val
	v.isSet = true
}

func (v NullableArchiveInsightsParams) IsSet() bool {
	return v.isSet
}

func (v *NullableArchiveInsightsParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArchiveInsightsParams(val *ArchiveInsightsParams) *NullableArchiveInsightsParams {
	return &NullableArchiveInsightsParams{value: val, isSet: true}
}

func (v NullableArchiveInsightsParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArchiveInsightsParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
