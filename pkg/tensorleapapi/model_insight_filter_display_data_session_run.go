/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.456
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the InsightFilterDisplayDataSessionRun type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InsightFilterDisplayDataSessionRun{}

// InsightFilterDisplayDataSessionRun struct for InsightFilterDisplayDataSessionRun
type InsightFilterDisplayDataSessionRun struct {
	SessionId string `json:"sessionId"`
	Id        string `json:"id"`
	Name      string `json:"name"`
}

// NewInsightFilterDisplayDataSessionRun instantiates a new InsightFilterDisplayDataSessionRun object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInsightFilterDisplayDataSessionRun(sessionId string, id string, name string) *InsightFilterDisplayDataSessionRun {
	this := InsightFilterDisplayDataSessionRun{}
	this.SessionId = sessionId
	this.Id = id
	this.Name = name
	return &this
}

// NewInsightFilterDisplayDataSessionRunWithDefaults instantiates a new InsightFilterDisplayDataSessionRun object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInsightFilterDisplayDataSessionRunWithDefaults() *InsightFilterDisplayDataSessionRun {
	this := InsightFilterDisplayDataSessionRun{}
	return &this
}

// GetSessionId returns the SessionId field value
func (o *InsightFilterDisplayDataSessionRun) GetSessionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value
// and a boolean to check if the value has been set.
func (o *InsightFilterDisplayDataSessionRun) GetSessionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionId, true
}

// SetSessionId sets field value
func (o *InsightFilterDisplayDataSessionRun) SetSessionId(v string) {
	o.SessionId = v
}

// GetId returns the Id field value
func (o *InsightFilterDisplayDataSessionRun) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InsightFilterDisplayDataSessionRun) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InsightFilterDisplayDataSessionRun) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *InsightFilterDisplayDataSessionRun) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InsightFilterDisplayDataSessionRun) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InsightFilterDisplayDataSessionRun) SetName(v string) {
	o.Name = v
}

func (o InsightFilterDisplayDataSessionRun) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InsightFilterDisplayDataSessionRun) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sessionId"] = o.SessionId
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableInsightFilterDisplayDataSessionRun struct {
	value *InsightFilterDisplayDataSessionRun
	isSet bool
}

func (v NullableInsightFilterDisplayDataSessionRun) Get() *InsightFilterDisplayDataSessionRun {
	return v.value
}

func (v *NullableInsightFilterDisplayDataSessionRun) Set(val *InsightFilterDisplayDataSessionRun) {
	v.value = val
	v.isSet = true
}

func (v NullableInsightFilterDisplayDataSessionRun) IsSet() bool {
	return v.isSet
}

func (v *NullableInsightFilterDisplayDataSessionRun) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInsightFilterDisplayDataSessionRun(val *InsightFilterDisplayDataSessionRun) *NullableInsightFilterDisplayDataSessionRun {
	return &NullableInsightFilterDisplayDataSessionRun{value: val, isSet: true}
}

func (v NullableInsightFilterDisplayDataSessionRun) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInsightFilterDisplayDataSessionRun) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
