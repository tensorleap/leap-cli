/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.638
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the SeverityMetricElement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SeverityMetricElement{}

// SeverityMetricElement struct for SeverityMetricElement
type SeverityMetricElement struct {
	MetricName      string   `json:"metric_name"`
	Value           float64  `json:"value"`
	NormalizedValue *float64 `json:"normalized_value,omitempty"`
}

// NewSeverityMetricElement instantiates a new SeverityMetricElement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeverityMetricElement(metricName string, value float64) *SeverityMetricElement {
	this := SeverityMetricElement{}
	this.MetricName = metricName
	this.Value = value
	return &this
}

// NewSeverityMetricElementWithDefaults instantiates a new SeverityMetricElement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeverityMetricElementWithDefaults() *SeverityMetricElement {
	this := SeverityMetricElement{}
	return &this
}

// GetMetricName returns the MetricName field value
func (o *SeverityMetricElement) GetMetricName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricName
}

// GetMetricNameOk returns a tuple with the MetricName field value
// and a boolean to check if the value has been set.
func (o *SeverityMetricElement) GetMetricNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricName, true
}

// SetMetricName sets field value
func (o *SeverityMetricElement) SetMetricName(v string) {
	o.MetricName = v
}

// GetValue returns the Value field value
func (o *SeverityMetricElement) GetValue() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SeverityMetricElement) GetValueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SeverityMetricElement) SetValue(v float64) {
	o.Value = v
}

// GetNormalizedValue returns the NormalizedValue field value if set, zero value otherwise.
func (o *SeverityMetricElement) GetNormalizedValue() float64 {
	if o == nil || IsNil(o.NormalizedValue) {
		var ret float64
		return ret
	}
	return *o.NormalizedValue
}

// GetNormalizedValueOk returns a tuple with the NormalizedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeverityMetricElement) GetNormalizedValueOk() (*float64, bool) {
	if o == nil || IsNil(o.NormalizedValue) {
		return nil, false
	}
	return o.NormalizedValue, true
}

// HasNormalizedValue returns a boolean if a field has been set.
func (o *SeverityMetricElement) HasNormalizedValue() bool {
	if o != nil && !IsNil(o.NormalizedValue) {
		return true
	}

	return false
}

// SetNormalizedValue gets a reference to the given float64 and assigns it to the NormalizedValue field.
func (o *SeverityMetricElement) SetNormalizedValue(v float64) {
	o.NormalizedValue = &v
}

func (o SeverityMetricElement) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeverityMetricElement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["metric_name"] = o.MetricName
	toSerialize["value"] = o.Value
	if !IsNil(o.NormalizedValue) {
		toSerialize["normalized_value"] = o.NormalizedValue
	}
	return toSerialize, nil
}

type NullableSeverityMetricElement struct {
	value *SeverityMetricElement
	isSet bool
}

func (v NullableSeverityMetricElement) Get() *SeverityMetricElement {
	return v.value
}

func (v *NullableSeverityMetricElement) Set(val *SeverityMetricElement) {
	v.value = val
	v.isSet = true
}

func (v NullableSeverityMetricElement) IsSet() bool {
	return v.isSet
}

func (v *NullableSeverityMetricElement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeverityMetricElement(val *SeverityMetricElement) *NullableSeverityMetricElement {
	return &NullableSeverityMetricElement{value: val, isSet: true}
}

func (v NullableSeverityMetricElement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeverityMetricElement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
