/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.618
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the MutualInformationElement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MutualInformationElement{}

// MutualInformationElement struct for MutualInformationElement
type MutualInformationElement struct {
	FeatureName         string    `json:"feature_name"`
	FeatureValue        *string   `json:"feature_value,omitempty"`
	Direction           Direction `json:"direction"`
	IsCategorical       bool      `json:"is_categorical"`
	ValueInCluster      *float64  `json:"value_in_cluster,omitempty"`
	ValueOutsideCluster *float64  `json:"value_outside_cluster,omitempty"`
	Score               *float64  `json:"score,omitempty"`
}

// NewMutualInformationElement instantiates a new MutualInformationElement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMutualInformationElement(featureName string, direction Direction, isCategorical bool) *MutualInformationElement {
	this := MutualInformationElement{}
	this.FeatureName = featureName
	this.Direction = direction
	this.IsCategorical = isCategorical
	return &this
}

// NewMutualInformationElementWithDefaults instantiates a new MutualInformationElement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMutualInformationElementWithDefaults() *MutualInformationElement {
	this := MutualInformationElement{}
	return &this
}

// GetFeatureName returns the FeatureName field value
func (o *MutualInformationElement) GetFeatureName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeatureName
}

// GetFeatureNameOk returns a tuple with the FeatureName field value
// and a boolean to check if the value has been set.
func (o *MutualInformationElement) GetFeatureNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeatureName, true
}

// SetFeatureName sets field value
func (o *MutualInformationElement) SetFeatureName(v string) {
	o.FeatureName = v
}

// GetFeatureValue returns the FeatureValue field value if set, zero value otherwise.
func (o *MutualInformationElement) GetFeatureValue() string {
	if o == nil || IsNil(o.FeatureValue) {
		var ret string
		return ret
	}
	return *o.FeatureValue
}

// GetFeatureValueOk returns a tuple with the FeatureValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutualInformationElement) GetFeatureValueOk() (*string, bool) {
	if o == nil || IsNil(o.FeatureValue) {
		return nil, false
	}
	return o.FeatureValue, true
}

// HasFeatureValue returns a boolean if a field has been set.
func (o *MutualInformationElement) HasFeatureValue() bool {
	if o != nil && !IsNil(o.FeatureValue) {
		return true
	}

	return false
}

// SetFeatureValue gets a reference to the given string and assigns it to the FeatureValue field.
func (o *MutualInformationElement) SetFeatureValue(v string) {
	o.FeatureValue = &v
}

// GetDirection returns the Direction field value
func (o *MutualInformationElement) GetDirection() Direction {
	if o == nil {
		var ret Direction
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *MutualInformationElement) GetDirectionOk() (*Direction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *MutualInformationElement) SetDirection(v Direction) {
	o.Direction = v
}

// GetIsCategorical returns the IsCategorical field value
func (o *MutualInformationElement) GetIsCategorical() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsCategorical
}

// GetIsCategoricalOk returns a tuple with the IsCategorical field value
// and a boolean to check if the value has been set.
func (o *MutualInformationElement) GetIsCategoricalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsCategorical, true
}

// SetIsCategorical sets field value
func (o *MutualInformationElement) SetIsCategorical(v bool) {
	o.IsCategorical = v
}

// GetValueInCluster returns the ValueInCluster field value if set, zero value otherwise.
func (o *MutualInformationElement) GetValueInCluster() float64 {
	if o == nil || IsNil(o.ValueInCluster) {
		var ret float64
		return ret
	}
	return *o.ValueInCluster
}

// GetValueInClusterOk returns a tuple with the ValueInCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutualInformationElement) GetValueInClusterOk() (*float64, bool) {
	if o == nil || IsNil(o.ValueInCluster) {
		return nil, false
	}
	return o.ValueInCluster, true
}

// HasValueInCluster returns a boolean if a field has been set.
func (o *MutualInformationElement) HasValueInCluster() bool {
	if o != nil && !IsNil(o.ValueInCluster) {
		return true
	}

	return false
}

// SetValueInCluster gets a reference to the given float64 and assigns it to the ValueInCluster field.
func (o *MutualInformationElement) SetValueInCluster(v float64) {
	o.ValueInCluster = &v
}

// GetValueOutsideCluster returns the ValueOutsideCluster field value if set, zero value otherwise.
func (o *MutualInformationElement) GetValueOutsideCluster() float64 {
	if o == nil || IsNil(o.ValueOutsideCluster) {
		var ret float64
		return ret
	}
	return *o.ValueOutsideCluster
}

// GetValueOutsideClusterOk returns a tuple with the ValueOutsideCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutualInformationElement) GetValueOutsideClusterOk() (*float64, bool) {
	if o == nil || IsNil(o.ValueOutsideCluster) {
		return nil, false
	}
	return o.ValueOutsideCluster, true
}

// HasValueOutsideCluster returns a boolean if a field has been set.
func (o *MutualInformationElement) HasValueOutsideCluster() bool {
	if o != nil && !IsNil(o.ValueOutsideCluster) {
		return true
	}

	return false
}

// SetValueOutsideCluster gets a reference to the given float64 and assigns it to the ValueOutsideCluster field.
func (o *MutualInformationElement) SetValueOutsideCluster(v float64) {
	o.ValueOutsideCluster = &v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *MutualInformationElement) GetScore() float64 {
	if o == nil || IsNil(o.Score) {
		var ret float64
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutualInformationElement) GetScoreOk() (*float64, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *MutualInformationElement) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given float64 and assigns it to the Score field.
func (o *MutualInformationElement) SetScore(v float64) {
	o.Score = &v
}

func (o MutualInformationElement) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MutualInformationElement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["feature_name"] = o.FeatureName
	if !IsNil(o.FeatureValue) {
		toSerialize["feature_value"] = o.FeatureValue
	}
	toSerialize["direction"] = o.Direction
	toSerialize["is_categorical"] = o.IsCategorical
	if !IsNil(o.ValueInCluster) {
		toSerialize["value_in_cluster"] = o.ValueInCluster
	}
	if !IsNil(o.ValueOutsideCluster) {
		toSerialize["value_outside_cluster"] = o.ValueOutsideCluster
	}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	return toSerialize, nil
}

type NullableMutualInformationElement struct {
	value *MutualInformationElement
	isSet bool
}

func (v NullableMutualInformationElement) Get() *MutualInformationElement {
	return v.value
}

func (v *NullableMutualInformationElement) Set(val *MutualInformationElement) {
	v.value = val
	v.isSet = true
}

func (v NullableMutualInformationElement) IsSet() bool {
	return v.isSet
}

func (v *NullableMutualInformationElement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMutualInformationElement(val *MutualInformationElement) *NullableMutualInformationElement {
	return &NullableMutualInformationElement{value: val, isSet: true}
}

func (v NullableMutualInformationElement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMutualInformationElement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
