/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.607
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the EpochData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EpochData{}

// EpochData struct for EpochData
type EpochData struct {
	SessionId             string                 `json:"sessionId"`
	Epoch                 float64                `json:"epoch"`
	Tags                  []string               `json:"tags"`
	WeightsData           *SessionWeightData     `json:"weightsData,omitempty"`
	UploadedModelFilePath *string                `json:"uploadedModelFilePath,omitempty"`
	Runs                  []SessionRunData       `json:"runs"`
	ExternalData          *EpochDataExternalData `json:"externalData,omitempty"`
}

// NewEpochData instantiates a new EpochData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEpochData(sessionId string, epoch float64, tags []string, runs []SessionRunData) *EpochData {
	this := EpochData{}
	this.SessionId = sessionId
	this.Epoch = epoch
	this.Tags = tags
	this.Runs = runs
	return &this
}

// NewEpochDataWithDefaults instantiates a new EpochData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEpochDataWithDefaults() *EpochData {
	this := EpochData{}
	return &this
}

// GetSessionId returns the SessionId field value
func (o *EpochData) GetSessionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value
// and a boolean to check if the value has been set.
func (o *EpochData) GetSessionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionId, true
}

// SetSessionId sets field value
func (o *EpochData) SetSessionId(v string) {
	o.SessionId = v
}

// GetEpoch returns the Epoch field value
func (o *EpochData) GetEpoch() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Epoch
}

// GetEpochOk returns a tuple with the Epoch field value
// and a boolean to check if the value has been set.
func (o *EpochData) GetEpochOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Epoch, true
}

// SetEpoch sets field value
func (o *EpochData) SetEpoch(v float64) {
	o.Epoch = v
}

// GetTags returns the Tags field value
func (o *EpochData) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *EpochData) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *EpochData) SetTags(v []string) {
	o.Tags = v
}

// GetWeightsData returns the WeightsData field value if set, zero value otherwise.
func (o *EpochData) GetWeightsData() SessionWeightData {
	if o == nil || IsNil(o.WeightsData) {
		var ret SessionWeightData
		return ret
	}
	return *o.WeightsData
}

// GetWeightsDataOk returns a tuple with the WeightsData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpochData) GetWeightsDataOk() (*SessionWeightData, bool) {
	if o == nil || IsNil(o.WeightsData) {
		return nil, false
	}
	return o.WeightsData, true
}

// HasWeightsData returns a boolean if a field has been set.
func (o *EpochData) HasWeightsData() bool {
	if o != nil && !IsNil(o.WeightsData) {
		return true
	}

	return false
}

// SetWeightsData gets a reference to the given SessionWeightData and assigns it to the WeightsData field.
func (o *EpochData) SetWeightsData(v SessionWeightData) {
	o.WeightsData = &v
}

// GetUploadedModelFilePath returns the UploadedModelFilePath field value if set, zero value otherwise.
func (o *EpochData) GetUploadedModelFilePath() string {
	if o == nil || IsNil(o.UploadedModelFilePath) {
		var ret string
		return ret
	}
	return *o.UploadedModelFilePath
}

// GetUploadedModelFilePathOk returns a tuple with the UploadedModelFilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpochData) GetUploadedModelFilePathOk() (*string, bool) {
	if o == nil || IsNil(o.UploadedModelFilePath) {
		return nil, false
	}
	return o.UploadedModelFilePath, true
}

// HasUploadedModelFilePath returns a boolean if a field has been set.
func (o *EpochData) HasUploadedModelFilePath() bool {
	if o != nil && !IsNil(o.UploadedModelFilePath) {
		return true
	}

	return false
}

// SetUploadedModelFilePath gets a reference to the given string and assigns it to the UploadedModelFilePath field.
func (o *EpochData) SetUploadedModelFilePath(v string) {
	o.UploadedModelFilePath = &v
}

// GetRuns returns the Runs field value
func (o *EpochData) GetRuns() []SessionRunData {
	if o == nil {
		var ret []SessionRunData
		return ret
	}

	return o.Runs
}

// GetRunsOk returns a tuple with the Runs field value
// and a boolean to check if the value has been set.
func (o *EpochData) GetRunsOk() ([]SessionRunData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Runs, true
}

// SetRuns sets field value
func (o *EpochData) SetRuns(v []SessionRunData) {
	o.Runs = v
}

// GetExternalData returns the ExternalData field value if set, zero value otherwise.
func (o *EpochData) GetExternalData() EpochDataExternalData {
	if o == nil || IsNil(o.ExternalData) {
		var ret EpochDataExternalData
		return ret
	}
	return *o.ExternalData
}

// GetExternalDataOk returns a tuple with the ExternalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpochData) GetExternalDataOk() (*EpochDataExternalData, bool) {
	if o == nil || IsNil(o.ExternalData) {
		return nil, false
	}
	return o.ExternalData, true
}

// HasExternalData returns a boolean if a field has been set.
func (o *EpochData) HasExternalData() bool {
	if o != nil && !IsNil(o.ExternalData) {
		return true
	}

	return false
}

// SetExternalData gets a reference to the given EpochDataExternalData and assigns it to the ExternalData field.
func (o *EpochData) SetExternalData(v EpochDataExternalData) {
	o.ExternalData = &v
}

func (o EpochData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EpochData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sessionId"] = o.SessionId
	toSerialize["epoch"] = o.Epoch
	toSerialize["tags"] = o.Tags
	if !IsNil(o.WeightsData) {
		toSerialize["weightsData"] = o.WeightsData
	}
	if !IsNil(o.UploadedModelFilePath) {
		toSerialize["uploadedModelFilePath"] = o.UploadedModelFilePath
	}
	toSerialize["runs"] = o.Runs
	if !IsNil(o.ExternalData) {
		toSerialize["externalData"] = o.ExternalData
	}
	return toSerialize, nil
}

type NullableEpochData struct {
	value *EpochData
	isSet bool
}

func (v NullableEpochData) Get() *EpochData {
	return v.value
}

func (v *NullableEpochData) Set(val *EpochData) {
	v.value = val
	v.isSet = true
}

func (v NullableEpochData) IsSet() bool {
	return v.isSet
}

func (v *NullableEpochData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEpochData(val *EpochData) *NullableEpochData {
	return &NullableEpochData{value: val, isSet: true}
}

func (v NullableEpochData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEpochData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
