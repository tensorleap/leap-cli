/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.607
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the LogExternalEpochDataRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogExternalEpochDataRequest{}

// LogExternalEpochDataRequest struct for LogExternalEpochDataRequest
type LogExternalEpochDataRequest struct {
	ProjectId    string                       `json:"projectId"`
	ExperimentId string                       `json:"experimentId"`
	Epoch        float64                      `json:"epoch"`
	Metrics      map[string]EpochMetricsValue `json:"metrics"`
	Override     *bool                        `json:"override,omitempty"`
}

// NewLogExternalEpochDataRequest instantiates a new LogExternalEpochDataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogExternalEpochDataRequest(projectId string, experimentId string, epoch float64, metrics map[string]EpochMetricsValue) *LogExternalEpochDataRequest {
	this := LogExternalEpochDataRequest{}
	this.ProjectId = projectId
	this.ExperimentId = experimentId
	this.Epoch = epoch
	this.Metrics = metrics
	return &this
}

// NewLogExternalEpochDataRequestWithDefaults instantiates a new LogExternalEpochDataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogExternalEpochDataRequestWithDefaults() *LogExternalEpochDataRequest {
	this := LogExternalEpochDataRequest{}
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *LogExternalEpochDataRequest) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *LogExternalEpochDataRequest) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *LogExternalEpochDataRequest) SetProjectId(v string) {
	o.ProjectId = v
}

// GetExperimentId returns the ExperimentId field value
func (o *LogExternalEpochDataRequest) GetExperimentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExperimentId
}

// GetExperimentIdOk returns a tuple with the ExperimentId field value
// and a boolean to check if the value has been set.
func (o *LogExternalEpochDataRequest) GetExperimentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExperimentId, true
}

// SetExperimentId sets field value
func (o *LogExternalEpochDataRequest) SetExperimentId(v string) {
	o.ExperimentId = v
}

// GetEpoch returns the Epoch field value
func (o *LogExternalEpochDataRequest) GetEpoch() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Epoch
}

// GetEpochOk returns a tuple with the Epoch field value
// and a boolean to check if the value has been set.
func (o *LogExternalEpochDataRequest) GetEpochOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Epoch, true
}

// SetEpoch sets field value
func (o *LogExternalEpochDataRequest) SetEpoch(v float64) {
	o.Epoch = v
}

// GetMetrics returns the Metrics field value
func (o *LogExternalEpochDataRequest) GetMetrics() map[string]EpochMetricsValue {
	if o == nil {
		var ret map[string]EpochMetricsValue
		return ret
	}

	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value
// and a boolean to check if the value has been set.
func (o *LogExternalEpochDataRequest) GetMetricsOk() (*map[string]EpochMetricsValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metrics, true
}

// SetMetrics sets field value
func (o *LogExternalEpochDataRequest) SetMetrics(v map[string]EpochMetricsValue) {
	o.Metrics = v
}

// GetOverride returns the Override field value if set, zero value otherwise.
func (o *LogExternalEpochDataRequest) GetOverride() bool {
	if o == nil || IsNil(o.Override) {
		var ret bool
		return ret
	}
	return *o.Override
}

// GetOverrideOk returns a tuple with the Override field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogExternalEpochDataRequest) GetOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.Override) {
		return nil, false
	}
	return o.Override, true
}

// HasOverride returns a boolean if a field has been set.
func (o *LogExternalEpochDataRequest) HasOverride() bool {
	if o != nil && !IsNil(o.Override) {
		return true
	}

	return false
}

// SetOverride gets a reference to the given bool and assigns it to the Override field.
func (o *LogExternalEpochDataRequest) SetOverride(v bool) {
	o.Override = &v
}

func (o LogExternalEpochDataRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogExternalEpochDataRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["projectId"] = o.ProjectId
	toSerialize["experimentId"] = o.ExperimentId
	toSerialize["epoch"] = o.Epoch
	toSerialize["metrics"] = o.Metrics
	if !IsNil(o.Override) {
		toSerialize["override"] = o.Override
	}
	return toSerialize, nil
}

type NullableLogExternalEpochDataRequest struct {
	value *LogExternalEpochDataRequest
	isSet bool
}

func (v NullableLogExternalEpochDataRequest) Get() *LogExternalEpochDataRequest {
	return v.value
}

func (v *NullableLogExternalEpochDataRequest) Set(val *LogExternalEpochDataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLogExternalEpochDataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLogExternalEpochDataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogExternalEpochDataRequest(val *LogExternalEpochDataRequest) *NullableLogExternalEpochDataRequest {
	return &NullableLogExternalEpochDataRequest{value: val, isSet: true}
}

func (v NullableLogExternalEpochDataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogExternalEpochDataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
