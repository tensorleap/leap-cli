name: Create release

on:
  workflow_dispatch:
  push:
    tags:
      - v*.*.*
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: ./go.mod

      - name: Install gox
        run: go install github.com/mitchellh/gox@latest

      - name: Extract Tag from Ref
        if: startsWith(github.ref, 'refs/tags/')
        id: tag
        run: echo VERSION=${GITHUB_REF/refs\/tags\//} >> $GITHUB_OUTPUT
        shell: bash

      - name: Build for all platforms
        env:
          CLI_BUILD_VERSION: ${{ steps.tag.outputs.VERSION }}
        run: make build-cross

      - uses: apexskier/github-semver-parse@v1
        if: startsWith(github.ref, 'refs/tags/')
        id: semver
        with:
          version: ${{ steps.tag.outputs.VERSION }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: dist/*
          generateReleaseNotes: true
          prerelease: ${{ steps.semver.outputs.prerelease != '' }}
          replacesArtifacts: true
  build-windows-installer:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Extract Tag from Ref
        if: startsWith(github.ref, 'refs/tags/')
        id: tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        shell: bash

      - name: Install Inno Setup
        run: choco install innosetup --no-progress
        shell: cmd

      - name: Replace version in Inno Setup script
        run: |
          (Get-Content windows-installer.iss.template) -replace '{#AppVersion}', '${{ env.VERSION }}' | Set-Content windows-installer.iss
        shell: pwsh

      - name: Compile the installer using Inno Setup
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" "windows-installer.iss"

      - name: Upload the Windows installer to the release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ./LeapCLIInstaller_${{ env.VERSION }}_windows_amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
